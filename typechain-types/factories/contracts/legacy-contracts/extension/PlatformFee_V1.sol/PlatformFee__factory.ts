/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PlatformFee,
  PlatformFeeInterface,
} from "../../../../../contracts/legacy-contracts/extension/PlatformFee_V1.sol/PlatformFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "PlatformFeeExceededMaxFeeBps",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "PlatformFeeInvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "PlatformFeeUnauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "platformFeeRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "platformFeeBps",
        type: "uint256",
      },
    ],
    name: "PlatformFeeInfoUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getPlatformFeeInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_platformFeeRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_platformFeeBps",
        type: "uint256",
      },
    ],
    name: "setPlatformFeeInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class PlatformFee__factory {
  static readonly abi = _abi;
  static createInterface(): PlatformFeeInterface {
    return new Interface(_abi) as PlatformFeeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PlatformFee {
    return new Contract(address, _abi, runner) as unknown as PlatformFee;
  }
}
