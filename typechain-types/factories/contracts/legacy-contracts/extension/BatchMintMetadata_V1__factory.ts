/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BatchMintMetadata_V1,
  BatchMintMetadata_V1Interface,
} from "../../../../contracts/legacy-contracts/extension/BatchMintMetadata_V1";

const _abi = [
  {
    inputs: [],
    name: "getBaseURICount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getBatchIdAtIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0000008003000039000000400030043f00000000030100190000006003300270000000100330019700000001022001900000001f0000c13d000000040230008c0000002e0000413d000000000201043b000000e002200270000000120420009c000000270000613d000000130220009c0000002e0000c13d0000000002000416000000240330008c0000002e0000413d000000000202004b0000002e0000c13d0000000401100370000000000101043b000000000200041a000000000221004b000000300000813d00000000000004350000001801100041000000000101041a000000800010043f00000014010000410000003b0001042e0000000001000416000000000101004b0000002e0000c13d00000020010000390000010000100443000001200000044300000011010000410000003b0001042e0000000001000416000000000101004b0000002e0000c13d000000000100041a000000800010043f00000014010000410000003b0001042e00000000010000190000003c000104300000001501000041000000800010043f0000002001000039000000840010043f0000000d01000039000000a40010043f0000001601000041000000c40010043f00000017010000410000003c000104300000003a000004320000003b0001042e0000003c0001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000063b45e2d000000000000000000000000000000000000000000000000000000002419f51b000000000000000000000000000000000000002000000080000000000000000008c379a000000000000000000000000000000000000000000000000000000000496e76616c696420696e646578000000000000000000000000000000000000000000000000000000000000000000000000000064000000800000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630000000000000000000000000000000000000000000000000000000000000000cf44567f37cd9444126fd6d1dee0a02e49f817e5187b83e69125130e7d254b2d";

type BatchMintMetadata_V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchMintMetadata_V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchMintMetadata_V1__factory extends ContractFactory {
  constructor(...args: BatchMintMetadata_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BatchMintMetadata_V1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BatchMintMetadata_V1__factory {
    return super.connect(runner) as BatchMintMetadata_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchMintMetadata_V1Interface {
    return new Interface(_abi) as BatchMintMetadata_V1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchMintMetadata_V1 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BatchMintMetadata_V1;
  }
}
