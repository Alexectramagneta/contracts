/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ContractMetadataLogic,
  ContractMetadataLogicInterface,
} from "../../../../contracts/extension/plugin/ContractMetadataLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "prevURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "ContractURIUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ContractMetadataLogic__factory {
  static readonly abi = _abi;
  static createInterface(): ContractMetadataLogicInterface {
    return new Interface(_abi) as ContractMetadataLogicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractMetadataLogic {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ContractMetadataLogic;
  }
}
