/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  BatchMintMetadata,
  BatchMintMetadataInterface,
} from "../../../../../contracts/extension/upgradeable/BatchMintMetadata.sol/BatchMintMetadata";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MetadataFrozen",
    type: "event",
  },
  {
    inputs: [],
    name: "getBaseURICount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getBatchIdAtIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0000008003000039000000400030043f00000000030100190000006003300270000000100330019700000001022001900000001d0000c13d000000040230008c0000002d0000413d000000000201043b000000e002200270000000120420009c000000250000613d000000130220009c0000002d0000c13d0000000002000416000000240330008c0000002d0000413d000000000202004b0000002d0000c13d0000000401100370000000000101043b0000001402000041000000000302041a000000000331004b0000002f0000813d00000000002004350000001901100041000000290000013d0000000001000416000000000101004b0000002d0000c13d00000020010000390000010000100443000001200000044300000011010000410000003a0001042e0000000001000416000000000101004b0000002d0000c13d0000001401000041000000000101041a000000800010043f00000015010000410000003a0001042e00000000010000190000003b000104300000001601000041000000800010043f0000002001000039000000840010043f0000000d01000039000000a40010043f0000001701000041000000c40010043f00000018010000410000003b0001043000000039000004320000003a0001042e0000003b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000063b45e2d000000000000000000000000000000000000000000000000000000002419f51bf5b99f0648d517803cfbd359284c3fd81ac54e1c89b4874d917ae042d05e8500000000000000000000000000000000000000002000000080000000000000000008c379a000000000000000000000000000000000000000000000000000000000496e76616c696420696e6465780000000000000000000000000000000000000000000000000000000000000000000000000000640000008000000000000000000f2d40ec237b66170a6392abda4e7107f83f54287025a079dac7db5c0fad71f2a5c4aba115b86681d8b478a46eab6914db2e45fc16d99a4c8460c81a99d7d4f2";

type BatchMintMetadataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchMintMetadataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchMintMetadata__factory extends ContractFactory {
  constructor(...args: BatchMintMetadataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BatchMintMetadata & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BatchMintMetadata__factory {
    return super.connect(runner) as BatchMintMetadata__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchMintMetadataInterface {
    return new Interface(_abi) as BatchMintMetadataInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchMintMetadata {
    return new Contract(address, _abi, runner) as unknown as BatchMintMetadata;
  }
}
