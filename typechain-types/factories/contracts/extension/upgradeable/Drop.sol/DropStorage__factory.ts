/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DropStorage,
  DropStorageInterface,
} from "../../../../../contracts/extension/upgradeable/Drop.sol/DropStorage";

const _abi = [
  {
    inputs: [],
    name: "DROP_STORAGE_POSITION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0000000102200190000000160000c13d00000000020100190000001202200198000000200000613d000000000101043b0000001301100197000000140110009c000000200000c13d0000001501000041000000a00010043f0000002002000039000000800020043f000000c001000039000000400010043f000000a001000039003d00220000040f000001000200008a000000000121016f000000c00010043f00000016010000410000003e0001042e0000008001000039000000400010043f0000000001000416000000000101004b000000200000c13d00000020010000390000010000100443000001200000044300000011010000410000003e0001042e00000000010000190000003f000104300000001703000041000000170410009c00000000010380190000004001100210000000170420009c00000000020380190000006002200210000000000112019f0000000002000414000000170420009c0000000002038019000000c002200210000000000112019f00000018011001c70000801002000039003d00380000040f0000000102200190000000360000613d000000000101043b000000000001042d00000000010000190000003f000104300000003b002104230000000102000039000000000001042d0000000002000019000000000001042d0000003d000004320000003e0001042e0000003f000104300000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000007cc3715100000000000000000000000000000000000000000000000000000000bc63558797adc09ce5b77f3ca89acfccabdd075e03de61144467402677b956b10000000000000000000000000000000000000020000000c0000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080b4361bfe6d85d3d21565b7bbb793c4eaa26594dd387acc14b785017c671ca3";

type DropStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropStorage__factory extends ContractFactory {
  constructor(...args: DropStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DropStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DropStorage__factory {
    return super.connect(runner) as DropStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropStorageInterface {
    return new Interface(_abi) as DropStorageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DropStorage {
    return new Contract(address, _abi, runner) as unknown as DropStorage;
  }
}
