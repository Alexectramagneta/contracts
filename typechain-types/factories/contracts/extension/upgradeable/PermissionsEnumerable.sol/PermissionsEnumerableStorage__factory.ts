/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PermissionsEnumerableStorage,
  PermissionsEnumerableStorageInterface,
} from "../../../../../contracts/extension/upgradeable/PermissionsEnumerable.sol/PermissionsEnumerableStorage";

const _abi = [
  {
    inputs: [],
    name: "PERMISSIONS_ENUMERABLE_STORAGE_POSITION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0000000102200190000000160000c13d00000000020100190000001202200198000000200000613d000000000101043b0000001301100197000000140110009c000000200000c13d0000001501000041000000a00010043f0000002002000039000000800020043f000000c001000039000000400010043f000000a001000039003d00220000040f000001000200008a000000000121016f000000c00010043f00000016010000410000003e0001042e0000008001000039000000400010043f0000000001000416000000000101004b000000200000c13d00000020010000390000010000100443000001200000044300000011010000410000003e0001042e00000000010000190000003f000104300000001703000041000000170410009c00000000010380190000004001100210000000170420009c00000000020380190000006002200210000000000112019f0000000002000414000000170420009c0000000002038019000000c002200210000000000112019f00000018011001c70000801002000039003d00380000040f0000000102200190000000360000613d000000000101043b000000000001042d00000000010000190000003f000104300000003b002104230000000102000039000000000001042d0000000002000019000000000001042d0000003d000004320000003e0001042e0000003f000104300000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000871ef69d000000000000000000000000000000000000000000000000000000000c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0b0000000000000000000000000000000000000020000000c0000000000000000000000000000000000000000000000000000000000000000000000000ffffffff020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f38e659ffad30d3f28689fb8617058d35c0afb1a71b699860cff46dc828cec7";

type PermissionsEnumerableStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionsEnumerableStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionsEnumerableStorage__factory extends ContractFactory {
  constructor(...args: PermissionsEnumerableStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermissionsEnumerableStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PermissionsEnumerableStorage__factory {
    return super.connect(runner) as PermissionsEnumerableStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionsEnumerableStorageInterface {
    return new Interface(_abi) as PermissionsEnumerableStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermissionsEnumerableStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PermissionsEnumerableStorage;
  }
}
