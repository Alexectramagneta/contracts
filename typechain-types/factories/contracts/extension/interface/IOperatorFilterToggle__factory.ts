/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOperatorFilterToggle,
  IOperatorFilterToggleInterface,
} from "../../../../contracts/extension/interface/IOperatorFilterToggle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "restriction",
        type: "bool",
      },
    ],
    name: "OperatorRestriction",
    type: "event",
  },
  {
    inputs: [],
    name: "operatorRestriction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "restriction",
        type: "bool",
      },
    ],
    name: "setOperatorRestriction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOperatorFilterToggle__factory {
  static readonly abi = _abi;
  static createInterface(): IOperatorFilterToggleInterface {
    return new Interface(_abi) as IOperatorFilterToggleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOperatorFilterToggle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IOperatorFilterToggle;
  }
}
