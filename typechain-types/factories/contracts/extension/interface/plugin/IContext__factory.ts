/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IContext,
  IContextInterface,
} from "../../../../../contracts/extension/interface/plugin/IContext";

const _abi = [
  {
    inputs: [],
    name: "_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IContext__factory {
  static readonly abi = _abi;
  static createInterface(): IContextInterface {
    return new Interface(_abi) as IContextInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IContext {
    return new Contract(address, _abi, runner) as unknown as IContext;
  }
}
