/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDelayedReveal,
  IDelayedRevealInterface,
} from "../../../../contracts/extension/interface/IDelayedReveal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "revealedURI",
        type: "string",
      },
    ],
    name: "TokenURIRevealed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "encryptDecrypt",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "reveal",
    outputs: [
      {
        internalType: "string",
        name: "revealedURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDelayedReveal__factory {
  static readonly abi = _abi;
  static createInterface(): IDelayedRevealInterface {
    return new Interface(_abi) as IDelayedRevealInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDelayedReveal {
    return new Contract(address, _abi, runner) as unknown as IDelayedReveal;
  }
}
