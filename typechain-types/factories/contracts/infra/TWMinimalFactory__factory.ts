/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TWMinimalFactory,
  TWMinimalFactoryInterface,
} from "../../../contracts/infra/TWMinimalFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x00020000000000020004000000000002000000000301001900000060033002700000006703300197000100000031035500000001022001900000002c0000613d0000001f0230003900000068022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000180000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000100000413d000000000502004b000000270000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f00000000001404350000005f0130008c0000002c0000a13d000000800900043d000000690190009c0000002e0000a13d00000000010000190000019800010430000000a00200043d0000006a0120009c0000002c0000213d0000001f01200039000000000131004b0000002c0000813d000000800120003900000000010104330000006b0410009c0000003e0000413d000000780100004100000000001004350000004101000039000000040010043f000000790100004100000198000104300000001f04100039000000200700008a000000000474016f0000003f04400039000000000474016f000000400800043d0000000004480019000000000584004b000000000500001900000001050040390000006a0640009c000000380000213d0000000105500190000000380000c13d000000a0022000390000008003300039000000400040043f00000000061804360000000004210019000000000334004b0000002c0000213d000000000301004b0000005d0000613d000000000300001900000000046300190000000005230019000000000505043300000000005404350000002003300039000000000413004b000000560000413d0000000001160019000000000001043500000000010004110000006003100210000000400100043d0000002002100039000000c00400043d000000000032043500000034031000390000000000430435000000340300003900000000003104350000006c0310009c000000380000213d0000006003100039000000400030043f0000006704000041000000670320009c000000000204801900000040022002100000000001010433000000670310009c00000000010480190000006001100210000000000121019f0000000002000414000000670320009c0000000002048019000000c002200210000000000112019f0000006d011001c70000801002000039000300000007001d000100000006001d000200000008001d000400000009001d019601910000040f000000040300002900000001022001900000002c0000613d000000000101043b0000006002300210000000400300043d0000001404300039000000000024043500000028023000390000006e040000410000000000420435000000640230003900000000040004140000004d0500008a000000000052043500000044023000390000006005000039000400000005001d00000000005204350000006f02000041000000000023043500000004023000390000000000120435000000670140009c00000067020000410000000004028019000000670130009c00000000030280190000004001300210000000c002400210000000000112019f00000070011001c700008006020000390196018c0000040f0000000102200190000000a80000613d000000000401043b000000ac0000013d00010000000103550000006001100270000000670010019d000000000400001900000002010000290000000002010433000000000102004b0000000309000029000000dd0000613d00000000010004140000000003000416000000040540008c000000b80000c13d00000001020000390000000001000031000000d90000013d0000006705000041000000670620009c0000000002058019000000670610009c0000000001058019000000c0011002100000006002200210000000000603004b000000c90000c13d0000000106000029000000670360009c00000000060580190000004003600210000000000232019f000000000121019f0000000002040019000000d30000013d000000010700002900000040057002100000006d055000410000007106000041000000720770009c000000000506801900000000025200190000000001120019000080090200003900000000050000190196018c0000040f00010000000103550000006001100270000000670010019d00000067011001970000000309000029000000000301004b000000e20000c13d0000000101200190000001120000613d0000002001000039000001000010044300000120000004430000007701000041000001970001042e0000006a0310009c000000380000213d0000001f03100039000000000393016f0000003f03300039000000000393016f000000400400043d0000000003340019000400000004001d000000000443004b000000000400001900000001040040390000006a0530009c000000380000213d0000000104400190000000380000c13d000000400030043f0000001f0310018f0000000404000029000000000414043600000001050003670000000501100272000001020000613d000000000600001900000005076002100000000008740019000000000775034f000000000707043b00000000007804350000000106600039000000000716004b000000fa0000413d000000000603004b000000db0000613d0000000501100210000000000515034f00000000011400190000000303300210000000000401043300000000043401cf000000000434022f000000000505043b0000010003300089000000000535022f00000000033501cf000000000343019f0000000000310435000000db0000013d00000004060000290000000001060433000000430110008c000001280000213d000000400100043d00000044021000390000007503000041000000000032043500000024021000390000001d030000390000000000320435000000740200004100000000002104350000000402100039000000200300003900000000003204350000006702000041000000670310009c0000000001028019000000400110021000000076011001c70000019800010430000000040160003900000000010104330000007302000041000000200310008c000000000300001900000000030240190000007304100197000000000504004b000000000200a019000000730440009c000000000203c019000000000202004b0000002c0000c13d000000240260003900000000030204330000006a0430009c0000002c0000213d000000000521001900000000012300190000001f021000390000007303000041000000000452004b0000000004000019000000000403801900000073022001970000007306500197000000000762004b0000000003008019000000000262013f000000730220009c000000000304c019000000000203004b0000002c0000c13d00000000420104340000006a0120009c000000380000213d0000001f01200039000000000191016f0000003f01100039000000000191016f000000400300043d0000000001130019000000000631004b000000000600001900000001060040390000006a0710009c000000380000213d0000000106600190000000380000c13d000000400010043f00000000012304360000000006420019000000000556004b0000002c0000213d000000000502004b000001680000613d000000000500001900000000061500190000000007450019000000000707043300000000007604350000002005500039000000000625004b000001610000413d000000000221001900000000000204350000007404000041000000400200043d00000000004204350000000404200039000000200500003900000000005404350000000003030433000000240420003900000000003404350000004404200039000000000503004b0000017e0000613d000000000500001900000000064500190000000007150019000000000707043300000000007604350000002005500039000000000635004b000001770000413d0000001f01300039000000030110017f0000000003430019000000000003043500000044011000390000006703000041000000670410009c0000000001038019000000670420009c000000000203801900000040022002100000006001100210000000000121019f00000198000104300000018f002104210000000102000039000000000001042d0000000002000019000000000001042d00000194002104230000000102000039000000000001042d0000000002000019000000000001042d0000019600000432000001970001042e000001980001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000ffffffffffffff9f02000000000000000000000000000000000000000000000000000000000000005af43d82803e903d91602b57fd5bf300000000000000000000000000000000003cda33511d41a8a5431b1770c5bc0ddd62e1cd30555d16659b89c0d60f4f9f5702000000000000000000000000000000000000370000000000000000000000000200000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000000000000000000100000000800000000000000000000000000000000000000000000000000000000000000008c379a0000000000000000000000000000000000000000000000000000000005472616e73616374696f6e2072657665727465642073696c656e746c79000000000000000000000000000000000000000000006400000000000000000000000000000002000000000000000000000000000000400000010000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000002669bdc3f7c8df6cd2354169fd65846e77435a8a647951417f66c147ce456d78";

type TWMinimalFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TWMinimalFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TWMinimalFactory__factory extends ContractFactory {
  constructor(...args: TWMinimalFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _implementation: AddressLike,
    _data: BytesLike,
    _salt: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _implementation,
      _data,
      _salt,
      overrides || {}
    );
  }
  override deploy(
    _implementation: AddressLike,
    _data: BytesLike,
    _salt: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _implementation,
      _data,
      _salt,
      overrides || {}
    ) as Promise<
      TWMinimalFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TWMinimalFactory__factory {
    return super.connect(runner) as TWMinimalFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TWMinimalFactoryInterface {
    return new Interface(_abi) as TWMinimalFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TWMinimalFactory {
    return new Contract(address, _abi, runner) as unknown as TWMinimalFactory;
  }
}
