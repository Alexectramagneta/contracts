/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "GovernorCountingSimpleUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable__factory>;
    getContractFactory(
      name: "GovernorSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorSettingsUpgradeable__factory>;
    getContractFactory(
      name: "GovernorVotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesQuorumFractionUpgradeable__factory>;
    getContractFactory(
      name: "GovernorVotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesUpgradeable__factory>;
    getContractFactory(
      name: "GovernorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorUpgradeable__factory>;
    getContractFactory(
      name: "IGovernorUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorUpgradeable__factory>;
    getContractFactory(
      name: "IVotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotesUpgradeable__factory>;
    getContractFactory(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981Upgradeable__factory>;
    getContractFactory(
      name: "IERC5267Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267Upgradeable__factory>;
    getContractFactory(
      name: "IERC5805Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805Upgradeable__factory>;
    getContractFactory(
      name: "IERC6372Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6372Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155PausableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC20BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20VotesUpgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721HolderUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "DoubleEndedQueueUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleEndedQueueUpgradeable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771Context__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Base__factory>;
    getContractFactory(
      name: "ERC1155DelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155DelayedReveal__factory>;
    getContractFactory(
      name: "ERC1155Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Drop__factory>;
    getContractFactory(
      name: "ERC1155LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155LazyMint__factory>;
    getContractFactory(
      name: "ERC1155SignatureMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155SignatureMint__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Drop__factory>;
    getContractFactory(
      name: "ERC20DropVote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20DropVote__factory>;
    getContractFactory(
      name: "ERC20SignatureMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20SignatureMint__factory>;
    getContractFactory(
      name: "ERC20SignatureMintVote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20SignatureMintVote__factory>;
    getContractFactory(
      name: "ERC20Vote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Vote__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721DelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721DelayedReveal__factory>;
    getContractFactory(
      name: "ERC721Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Drop__factory>;
    getContractFactory(
      name: "ERC721LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721LazyMint__factory>;
    getContractFactory(
      name: "ERC721Multiwrap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Multiwrap__factory>;
    getContractFactory(
      name: "ERC721SignatureMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721SignatureMint__factory>;
    getContractFactory(
      name: "Staking1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking1155Base__factory>;
    getContractFactory(
      name: "Staking20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking20Base__factory>;
    getContractFactory(
      name: "Staking721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking721Base__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "ERC721AStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AStorage__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Enumerable__factory>;
    getContractFactory(
      name: "IERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Metadata__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Supply__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC721Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Supply__factory>;
    getContractFactory(
      name: "ERC721AQueryable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryable__factory>;
    getContractFactory(
      name: "ERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AQueryable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AQueryable__factory>;
    getContractFactory(
      name: "IERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AQueryableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "AppURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppURI__factory>;
    getContractFactory(
      name: "BatchMintMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchMintMetadata__factory>;
    getContractFactory(
      name: "BurnToClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BurnToClaim__factory>;
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "DelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedReveal__factory>;
    getContractFactory(
      name: "Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drop__factory>;
    getContractFactory(
      name: "Drop1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drop1155__factory>;
    getContractFactory(
      name: "DropSinglePhase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropSinglePhase__factory>;
    getContractFactory(
      name: "DropSinglePhase1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropSinglePhase1155__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "IAccountPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountPermissions__factory>;
    getContractFactory(
      name: "IAppURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAppURI__factory>;
    getContractFactory(
      name: "IBurnableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBurnableERC1155__factory>;
    getContractFactory(
      name: "IBurnableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBurnableERC20__factory>;
    getContractFactory(
      name: "IBurnableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBurnableERC721__factory>;
    getContractFactory(
      name: "IBurnToClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBurnToClaim__factory>;
    getContractFactory(
      name: "IClaimableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimableERC1155__factory>;
    getContractFactory(
      name: "IClaimableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimableERC721__factory>;
    getContractFactory(
      name: "IClaimConditionsSinglePhase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimConditionsSinglePhase__factory>;
    getContractFactory(
      name: "IContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractFactory__factory>;
    getContractFactory(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractMetadata__factory>;
    getContractFactory(
      name: "IDelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelayedReveal__factory>;
    getContractFactory(
      name: "IDelayedRevealDeprecated",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelayedRevealDeprecated__factory>;
    getContractFactory(
      name: "IDrop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDrop__factory>;
    getContractFactory(
      name: "IDrop1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDrop1155__factory>;
    getContractFactory(
      name: "IDropSinglePhase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropSinglePhase__factory>;
    getContractFactory(
      name: "IDropSinglePhase1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropSinglePhase1155__factory>;
    getContractFactory(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2771Context__factory>;
    getContractFactory(
      name: "ILazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILazyMint__factory>;
    getContractFactory(
      name: "ILazyMintWithTier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILazyMintWithTier__factory>;
    getContractFactory(
      name: "IMintableERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC1155__factory>;
    getContractFactory(
      name: "IMintableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC20__factory>;
    getContractFactory(
      name: "IMintableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintableERC721__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "INFTMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTMetadata__factory>;
    getContractFactory(
      name: "IOperatorFilterRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOperatorFilterRegistry__factory>;
    getContractFactory(
      name: "IOperatorFilterToggle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOperatorFilterToggle__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissions__factory>;
    getContractFactory(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionsEnumerable__factory>;
    getContractFactory(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatformFee__factory>;
    getContractFactory(
      name: "IPrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrimarySale__factory>;
    getContractFactory(
      name: "IRoyalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyalty__factory>;
    getContractFactory(
      name: "IRoyaltyEngineV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyaltyEngineV1__factory>;
    getContractFactory(
      name: "IRoyaltyPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyaltyPayments__factory>;
    getContractFactory(
      name: "IRulesEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRulesEngine__factory>;
    getContractFactory(
      name: "ISharedMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISharedMetadata__factory>;
    getContractFactory(
      name: "ISharedMetadataBatch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISharedMetadataBatch__factory>;
    getContractFactory(
      name: "ISignatureAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignatureAction__factory>;
    getContractFactory(
      name: "ISignatureMintERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignatureMintERC1155__factory>;
    getContractFactory(
      name: "ISignatureMintERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignatureMintERC20__factory>;
    getContractFactory(
      name: "ISignatureMintERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignatureMintERC721__factory>;
    getContractFactory(
      name: "IStaking1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking1155__factory>;
    getContractFactory(
      name: "IStaking20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking20__factory>;
    getContractFactory(
      name: "IStaking721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking721__factory>;
    getContractFactory(
      name: "IContext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContext__factory>;
    getContractFactory(
      name: "IPluginMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPluginMap__factory>;
    getContractFactory(
      name: "IRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouter__factory>;
    getContractFactory(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMint__factory>;
    getContractFactory(
      name: "LazyMintWithTier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMintWithTier__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "NFTMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTMetadata__factory>;
    getContractFactory(
      name: "OperatorFilterer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterer__factory>;
    getContractFactory(
      name: "OperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable__factory>;
    getContractFactory(
      name: "OperatorFilterToggle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterToggle__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFee__factory>;
    getContractFactory(
      name: "ContractMetadataLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataLogic__factory>;
    getContractFactory(
      name: "ContractMetadataStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataStorage__factory>;
    getContractFactory(
      name: "ERC2771ContextConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextConsumer__factory>;
    getContractFactory(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextLogic__factory>;
    getContractFactory(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextStorage__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeableLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableLogic__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableStorage__factory>;
    getContractFactory(
      name: "PermissionsEnumerableLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableLogic__factory>;
    getContractFactory(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableStorage__factory>;
    getContractFactory(
      name: "PermissionsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsLogic__factory>;
    getContractFactory(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsStorage__factory>;
    getContractFactory(
      name: "PlatformFeeLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFeeLogic__factory>;
    getContractFactory(
      name: "PlatformFeeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFeeStorage__factory>;
    getContractFactory(
      name: "PluginMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PluginMap__factory>;
    getContractFactory(
      name: "ReentrancyGuardStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardStorage__factory>;
    getContractFactory(
      name: "Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Router__factory>;
    getContractFactory(
      name: "RouterStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterStorage__factory>;
    getContractFactory(
      name: "RouterImmutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RouterImmutable__factory>;
    getContractFactory(
      name: "RoyaltyPaymentsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic__factory>;
    getContractFactory(
      name: "RoyaltyPaymentsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage__factory>;
    getContractFactory(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySale__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyForUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyForUpgradeable__factory>;
    getContractFactory(
      name: "Royalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Royalty__factory>;
    getContractFactory(
      name: "SeaportEIP1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeaportEIP1271__factory>;
    getContractFactory(
      name: "SeaportOrderParser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeaportOrderParser__factory>;
    getContractFactory(
      name: "SharedMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SharedMetadata__factory>;
    getContractFactory(
      name: "SignatureAction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureAction__factory>;
    getContractFactory(
      name: "SignatureActionUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureActionUpgradeable__factory>;
    getContractFactory(
      name: "SignatureMintERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC1155__factory>;
    getContractFactory(
      name: "SignatureMintERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC1155Upgradeable__factory>;
    getContractFactory(
      name: "SignatureMintERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC20__factory>;
    getContractFactory(
      name: "SignatureMintERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC20Upgradeable__factory>;
    getContractFactory(
      name: "SignatureMintERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC721__factory>;
    getContractFactory(
      name: "SignatureMintERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureMintERC721Upgradeable__factory>;
    getContractFactory(
      name: "SoulboundERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SoulboundERC721A__factory>;
    getContractFactory(
      name: "Staking1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking1155__factory>;
    getContractFactory(
      name: "Staking1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking1155Upgradeable__factory>;
    getContractFactory(
      name: "Staking20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking20__factory>;
    getContractFactory(
      name: "Staking20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking20Upgradeable__factory>;
    getContractFactory(
      name: "Staking721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking721__factory>;
    getContractFactory(
      name: "Staking721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking721Upgradeable__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "TokenBundle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenBundle__factory>;
    getContractFactory(
      name: "TokenStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenStore__factory>;
    getContractFactory(
      name: "Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Upgradeable__factory>;
    getContractFactory(
      name: "AccountPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountPermissions__factory>;
    getContractFactory(
      name: "AccountPermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountPermissionsStorage__factory>;
    getContractFactory(
      name: "BatchMintMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchMintMetadata__factory>;
    getContractFactory(
      name: "BatchMintMetadataStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchMintMetadataStorage__factory>;
    getContractFactory(
      name: "BurnToClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BurnToClaim__factory>;
    getContractFactory(
      name: "BurnToClaimStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BurnToClaimStorage__factory>;
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "ContractMetadataStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataStorage__factory>;
    getContractFactory(
      name: "DelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedReveal__factory>;
    getContractFactory(
      name: "DelayedRevealStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedRevealStorage__factory>;
    getContractFactory(
      name: "Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drop__factory>;
    getContractFactory(
      name: "DropStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropStorage__factory>;
    getContractFactory(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextStorage__factory>;
    getContractFactory(
      name: "ERC2771ContextConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextConsumer__factory>;
    getContractFactory(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextStorage__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable__factory>;
    getContractFactory(
      name: "ContractMetadataImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataImpl__factory>;
    getContractFactory(
      name: "MetaTx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetaTx__factory>;
    getContractFactory(
      name: "PermissionsEnumerableImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableImpl__factory>;
    getContractFactory(
      name: "PlatformFeeImpl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFeeImpl__factory>;
    getContractFactory(
      name: "ContractMetadataInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadataInit__factory>;
    getContractFactory(
      name: "ERC2771ContextInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextInit__factory>;
    getContractFactory(
      name: "ERC721AInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AInit__factory>;
    getContractFactory(
      name: "OwnableInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableInit__factory>;
    getContractFactory(
      name: "PermissionsEnumerableInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableInit__factory>;
    getContractFactory(
      name: "PermissionsInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsInit__factory>;
    getContractFactory(
      name: "PlatformFeeInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFeeInit__factory>;
    getContractFactory(
      name: "PrimarySaleInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySaleInit__factory>;
    getContractFactory(
      name: "ReentrancyGuardInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardInit__factory>;
    getContractFactory(
      name: "RoyaltyInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyInit__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMint__factory>;
    getContractFactory(
      name: "LazyMintStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMintStorage__factory>;
    getContractFactory(
      name: "OperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable__factory>;
    getContractFactory(
      name: "OperatorFilterToggle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterToggle__factory>;
    getContractFactory(
      name: "OperatorFilterToggleStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFilterToggleStorage__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableStorage__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsStorage__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerableStorage__factory>;
    getContractFactory(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFee__factory>;
    getContractFactory(
      name: "PlatformFeeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFeeStorage__factory>;
    getContractFactory(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySale__factory>;
    getContractFactory(
      name: "PrimarySaleStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySaleStorage__factory>;
    getContractFactory(
      name: "ReentrancyGuardStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardStorage__factory>;
    getContractFactory(
      name: "Royalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Royalty__factory>;
    getContractFactory(
      name: "RoyaltyStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyStorage__factory>;
    getContractFactory(
      name: "RoyaltyPaymentsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic__factory>;
    getContractFactory(
      name: "RoyaltyPaymentsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage__factory>;
    getContractFactory(
      name: "RulesEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RulesEngine__factory>;
    getContractFactory(
      name: "RulesEngineStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RulesEngineStorage__factory>;
    getContractFactory(
      name: "SharedMetadataBatch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SharedMetadataBatch__factory>;
    getContractFactory(
      name: "SharedMetadataBatchStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SharedMetadataBatchStorage__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "VRFV2WrapperConsumerBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFV2WrapperConsumerBase__factory>;
    getContractFactory(
      name: "VRFV2WrapperInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFV2WrapperInterface__factory>;
    getContractFactory(
      name: "ERC1155PresetUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155PresetUpgradeable__factory>;
    getContractFactory(
      name: "PaymentSplitterUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentSplitterUpgradeable__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable__factory>;
    getContractFactory(
      name: "MinimalForwarderEOAOnly",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalForwarderEOAOnly__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Votes__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ContractPublisher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractPublisher__factory>;
    getContractFactory(
      name: "Forwarder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Forwarder__factory>;
    getContractFactory(
      name: "ForwarderChainlessDomain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForwarderChainlessDomain__factory>;
    getContractFactory(
      name: "ForwarderConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForwarderConsumer__factory>;
    getContractFactory(
      name: "ForwarderEOAOnly",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForwarderEOAOnly__factory>;
    getContractFactory(
      name: "IContractDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractDeployer__factory>;
    getContractFactory(
      name: "IContractPublisher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractPublisher__factory>;
    getContractFactory(
      name: "IThirdwebContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IThirdwebContract__factory>;
    getContractFactory(
      name: "ITWFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWFee__factory>;
    getContractFactory(
      name: "ITWMultichainRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWMultichainRegistry__factory>;
    getContractFactory(
      name: "ITWRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITWRegistry__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "TWMultichainRegistryRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWMultichainRegistryRouter__factory>;
    getContractFactory(
      name: "TWMultichainRegistryLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWMultichainRegistryLogic__factory>;
    getContractFactory(
      name: "TWMultichainRegistryStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWMultichainRegistryStorage__factory>;
    getContractFactory(
      name: "TWFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWFactory__factory>;
    getContractFactory(
      name: "IFeeTierPlacementExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeTierPlacementExtension__factory>;
    getContractFactory(
      name: "TWFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWFee__factory>;
    getContractFactory(
      name: "TWMinimalFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWMinimalFactory__factory>;
    getContractFactory(
      name: "TWMultichainRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWMultichainRegistry__factory>;
    getContractFactory(
      name: "TWProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWProxy__factory>;
    getContractFactory(
      name: "TWRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWRegistry__factory>;
    getContractFactory(
      name: "TWStatelessFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TWStatelessFactory__factory>;
    getContractFactory(
      name: "BatchMintMetadata_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchMintMetadata_V1__factory>;
    getContractFactory(
      name: "DropSinglePhase_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropSinglePhase_V1__factory>;
    getContractFactory(
      name: "DropSinglePhase1155_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropSinglePhase1155_V1__factory>;
    getContractFactory(
      name: "IDropSinglePhase_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropSinglePhase_V1__factory>;
    getContractFactory(
      name: "IDropSinglePhase1155_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropSinglePhase1155_V1__factory>;
    getContractFactory(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatformFee__factory>;
    getContractFactory(
      name: "IPrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrimarySale__factory>;
    getContractFactory(
      name: "LazyMint_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMint_V1__factory>;
    getContractFactory(
      name: "LazyMintWithTier_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMintWithTier_V1__factory>;
    getContractFactory(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFee__factory>;
    getContractFactory(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySale__factory>;
    getContractFactory(
      name: "IDropERC1155_V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC1155_V2__factory>;
    getContractFactory(
      name: "IDropERC20_V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC20_V2__factory>;
    getContractFactory(
      name: "IDropERC721_V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC721_V3__factory>;
    getContractFactory(
      name: "ISignatureMintERC721_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignatureMintERC721_V1__factory>;
    getContractFactory(
      name: "DropERC1155_V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC1155_V2__factory>;
    getContractFactory(
      name: "DropERC20_V2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC20_V2__factory>;
    getContractFactory(
      name: "DropERC721_V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC721_V3__factory>;
    getContractFactory(
      name: "SignatureDrop_V4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureDrop_V4__factory>;
    getContractFactory(
      name: "IAccountPermissions_V1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccountPermissions_V1__factory>;
    getContractFactory(
      name: "CurrencyTransferLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurrencyTransferLib__factory>;
    getContractFactory(
      name: "Airdrop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Airdrop__factory>;
    getContractFactory(
      name: "DropERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC1155__factory>;
    getContractFactory(
      name: "DropERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC20__factory>;
    getContractFactory(
      name: "DropERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC721__factory>;
    getContractFactory(
      name: "IAirdropERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC1155__factory>;
    getContractFactory(
      name: "IAirdropERC1155Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC1155Claimable__factory>;
    getContractFactory(
      name: "IAirdropERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC20__factory>;
    getContractFactory(
      name: "IAirdropERC20Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC20Claimable__factory>;
    getContractFactory(
      name: "IAirdropERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC721__factory>;
    getContractFactory(
      name: "IAirdropERC721Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAirdropERC721Claimable__factory>;
    getContractFactory(
      name: "IDropERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC1155__factory>;
    getContractFactory(
      name: "IDropERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC20__factory>;
    getContractFactory(
      name: "IDropERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDropERC721__factory>;
    getContractFactory(
      name: "ILoyaltyCard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoyaltyCard__factory>;
    getContractFactory(
      name: "ILoyaltyPoints",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILoyaltyPoints__factory>;
    getContractFactory(
      name: "IMultiwrap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMultiwrap__factory>;
    getContractFactory(
      name: "IPack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPack__factory>;
    getContractFactory(
      name: "IPackVRFDirect",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPackVRFDirect__factory>;
    getContractFactory(
      name: "IMarketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketplace__factory>;
    getContractFactory(
      name: "IEditionStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEditionStake__factory>;
    getContractFactory(
      name: "INFTStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTStake__factory>;
    getContractFactory(
      name: "ITokenStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenStake__factory>;
    getContractFactory(
      name: "ITokenERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenERC1155__factory>;
    getContractFactory(
      name: "ITokenERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenERC20__factory>;
    getContractFactory(
      name: "ITokenERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenERC721__factory>;
    getContractFactory(
      name: "LoyaltyCard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoyaltyCard__factory>;
    getContractFactory(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Marketplace__factory>;
    getContractFactory(
      name: "DirectListingsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DirectListingsLogic__factory>;
    getContractFactory(
      name: "DirectListingsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DirectListingsStorage__factory>;
    getContractFactory(
      name: "EnglishAuctionsLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnglishAuctionsLogic__factory>;
    getContractFactory(
      name: "EnglishAuctionsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnglishAuctionsStorage__factory>;
    getContractFactory(
      name: "MarketplaceV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketplaceV3__factory>;
    getContractFactory(
      name: "IDirectListings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDirectListings__factory>;
    getContractFactory(
      name: "IEnglishAuctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEnglishAuctions__factory>;
    getContractFactory(
      name: "IOffers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOffers__factory>;
    getContractFactory(
      name: "OffersLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OffersLogic__factory>;
    getContractFactory(
      name: "OffersStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OffersStorage__factory>;
    getContractFactory(
      name: "Multiwrap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multiwrap__factory>;
    getContractFactory(
      name: "OpenEditionERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenEditionERC721__factory>;
    getContractFactory(
      name: "OpenEditionERC721FlatFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenEditionERC721FlatFee__factory>;
    getContractFactory(
      name: "Pack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pack__factory>;
    getContractFactory(
      name: "PackVRFDirect",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PackVRFDirect__factory>;
    getContractFactory(
      name: "SignatureDrop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureDrop__factory>;
    getContractFactory(
      name: "Split",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Split__factory>;
    getContractFactory(
      name: "EditionStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EditionStake__factory>;
    getContractFactory(
      name: "NFTStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTStake__factory>;
    getContractFactory(
      name: "TokenStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenStake__factory>;
    getContractFactory(
      name: "TieredDrop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredDrop__factory>;
    getContractFactory(
      name: "TokenERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC1155__factory>;
    getContractFactory(
      name: "TokenERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC20__factory>;
    getContractFactory(
      name: "TokenERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC721__factory>;
    getContractFactory(
      name: "AirdropERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC1155__factory>;
    getContractFactory(
      name: "AirdropERC1155Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC1155Claimable__factory>;
    getContractFactory(
      name: "AirdropERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC20__factory>;
    getContractFactory(
      name: "AirdropERC20Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC20Claimable__factory>;
    getContractFactory(
      name: "AirdropERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC721__factory>;
    getContractFactory(
      name: "AirdropERC721Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AirdropERC721Claimable__factory>;
    getContractFactory(
      name: "LoyaltyPoints",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoyaltyPoints__factory>;
    getContractFactory(
      name: "VoteERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteERC20__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "SafeTransferLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeTransferLib__factory>;

    getContractAt(
      name: "AccessControlEnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlEnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "GovernorCountingSimpleUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable>;
    getContractAt(
      name: "GovernorSettingsUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorSettingsUpgradeable>;
    getContractAt(
      name: "GovernorVotesQuorumFractionUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesQuorumFractionUpgradeable>;
    getContractAt(
      name: "GovernorVotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesUpgradeable>;
    getContractAt(
      name: "GovernorUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorUpgradeable>;
    getContractAt(
      name: "IGovernorUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorUpgradeable>;
    getContractAt(
      name: "IVotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotesUpgradeable>;
    getContractAt(
      name: "IERC2981Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981Upgradeable>;
    getContractAt(
      name: "IERC5267Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267Upgradeable>;
    getContractAt(
      name: "IERC5805Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805Upgradeable>;
    getContractAt(
      name: "IERC6372Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6372Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155BurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    getContractAt(
      name: "ERC1155PausableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155PausableUpgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155HolderUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    getContractAt(
      name: "ERC1155ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "ERC20BurnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BurnableUpgradeable>;
    getContractAt(
      name: "ERC20PermitUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721EnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721EnumerableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ERC721HolderUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "DoubleEndedQueueUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleEndedQueueUpgradeable>;
    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "IERC2981",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771Context>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "ERC1155Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Base>;
    getContractAt(
      name: "ERC1155DelayedReveal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155DelayedReveal>;
    getContractAt(
      name: "ERC1155Drop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Drop>;
    getContractAt(
      name: "ERC1155LazyMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155LazyMint>;
    getContractAt(
      name: "ERC1155SignatureMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155SignatureMint>;
    getContractAt(
      name: "ERC20Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "ERC20Drop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Drop>;
    getContractAt(
      name: "ERC20DropVote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20DropVote>;
    getContractAt(
      name: "ERC20SignatureMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20SignatureMint>;
    getContractAt(
      name: "ERC20SignatureMintVote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20SignatureMintVote>;
    getContractAt(
      name: "ERC20Vote",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Vote>;
    getContractAt(
      name: "ERC721Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721DelayedReveal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721DelayedReveal>;
    getContractAt(
      name: "ERC721Drop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Drop>;
    getContractAt(
      name: "ERC721LazyMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721LazyMint>;
    getContractAt(
      name: "ERC721Multiwrap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Multiwrap>;
    getContractAt(
      name: "ERC721SignatureMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721SignatureMint>;
    getContractAt(
      name: "Staking1155Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking1155Base>;
    getContractAt(
      name: "Staking20Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking20Base>;
    getContractAt(
      name: "Staking721Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking721Base>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "ERC721AStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AStorage>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "ERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Enumerable>;
    getContractAt(
      name: "IERC1155Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Metadata>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC1155Supply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Supply>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC2981",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC4906",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC721Supply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Supply>;
    getContractAt(
      name: "ERC721AQueryable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryable>;
    getContractAt(
      name: "ERC721AQueryableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryableUpgradeable>;
    getContractAt(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC721AQueryable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AQueryable>;
    getContractAt(
      name: "IERC721AQueryableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AQueryableUpgradeable>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "AppURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AppURI>;
    getContractAt(
      name: "BatchMintMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchMintMetadata>;
    getContractAt(
      name: "BurnToClaim",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BurnToClaim>;
    getContractAt(
      name: "ContractMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "DelayedReveal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DelayedReveal>;
    getContractAt(
      name: "Drop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Drop>;
    getContractAt(
      name: "Drop1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Drop1155>;
    getContractAt(
      name: "DropSinglePhase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropSinglePhase>;
    getContractAt(
      name: "DropSinglePhase1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropSinglePhase1155>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "IAccountPermissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountPermissions>;
    getContractAt(
      name: "IAppURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAppURI>;
    getContractAt(
      name: "IBurnableERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBurnableERC1155>;
    getContractAt(
      name: "IBurnableERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBurnableERC20>;
    getContractAt(
      name: "IBurnableERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBurnableERC721>;
    getContractAt(
      name: "IBurnToClaim",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBurnToClaim>;
    getContractAt(
      name: "IClaimableERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimableERC1155>;
    getContractAt(
      name: "IClaimableERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimableERC721>;
    getContractAt(
      name: "IClaimConditionsSinglePhase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimConditionsSinglePhase>;
    getContractAt(
      name: "IContractFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractFactory>;
    getContractAt(
      name: "IContractMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractMetadata>;
    getContractAt(
      name: "IDelayedReveal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelayedReveal>;
    getContractAt(
      name: "IDelayedRevealDeprecated",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelayedRevealDeprecated>;
    getContractAt(
      name: "IDrop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDrop>;
    getContractAt(
      name: "IDrop1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDrop1155>;
    getContractAt(
      name: "IDropSinglePhase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropSinglePhase>;
    getContractAt(
      name: "IDropSinglePhase1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropSinglePhase1155>;
    getContractAt(
      name: "IERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2771Context>;
    getContractAt(
      name: "ILazyMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILazyMint>;
    getContractAt(
      name: "ILazyMintWithTier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILazyMintWithTier>;
    getContractAt(
      name: "IMintableERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC1155>;
    getContractAt(
      name: "IMintableERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC20>;
    getContractAt(
      name: "IMintableERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMintableERC721>;
    getContractAt(
      name: "IMulticall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "INFTMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTMetadata>;
    getContractAt(
      name: "IOperatorFilterRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOperatorFilterRegistry>;
    getContractAt(
      name: "IOperatorFilterToggle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOperatorFilterToggle>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IPermissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissions>;
    getContractAt(
      name: "IPermissionsEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionsEnumerable>;
    getContractAt(
      name: "IPlatformFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlatformFee>;
    getContractAt(
      name: "IPrimarySale",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrimarySale>;
    getContractAt(
      name: "IRoyalty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRoyalty>;
    getContractAt(
      name: "IRoyaltyEngineV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRoyaltyEngineV1>;
    getContractAt(
      name: "IRoyaltyPayments",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRoyaltyPayments>;
    getContractAt(
      name: "IRulesEngine",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRulesEngine>;
    getContractAt(
      name: "ISharedMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISharedMetadata>;
    getContractAt(
      name: "ISharedMetadataBatch",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISharedMetadataBatch>;
    getContractAt(
      name: "ISignatureAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignatureAction>;
    getContractAt(
      name: "ISignatureMintERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignatureMintERC1155>;
    getContractAt(
      name: "ISignatureMintERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignatureMintERC20>;
    getContractAt(
      name: "ISignatureMintERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignatureMintERC721>;
    getContractAt(
      name: "IStaking1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking1155>;
    getContractAt(
      name: "IStaking20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking20>;
    getContractAt(
      name: "IStaking721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking721>;
    getContractAt(
      name: "IContext",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContext>;
    getContractAt(
      name: "IPluginMap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPluginMap>;
    getContractAt(
      name: "IRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRouter>;
    getContractAt(
      name: "LazyMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMint>;
    getContractAt(
      name: "LazyMintWithTier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMintWithTier>;
    getContractAt(
      name: "Multicall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "NFTMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTMetadata>;
    getContractAt(
      name: "OperatorFilterer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterer>;
    getContractAt(
      name: "OperatorFiltererUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    getContractAt(
      name: "OperatorFilterToggle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterToggle>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Permissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "PlatformFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFee>;
    getContractAt(
      name: "ContractMetadataLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataLogic>;
    getContractAt(
      name: "ContractMetadataStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataStorage>;
    getContractAt(
      name: "ERC2771ContextConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextConsumer>;
    getContractAt(
      name: "IERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2771Context>;
    getContractAt(
      name: "ERC2771ContextLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextLogic>;
    getContractAt(
      name: "ERC2771ContextStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextStorage>;
    getContractAt(
      name: "ERC2771ContextUpgradeableLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeableLogic>;
    getContractAt(
      name: "ERC2771ContextUpgradeableStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeableStorage>;
    getContractAt(
      name: "PermissionsEnumerableLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableLogic>;
    getContractAt(
      name: "PermissionsEnumerableStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    getContractAt(
      name: "PermissionsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsLogic>;
    getContractAt(
      name: "PermissionsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsStorage>;
    getContractAt(
      name: "PlatformFeeLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFeeLogic>;
    getContractAt(
      name: "PlatformFeeStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFeeStorage>;
    getContractAt(
      name: "PluginMap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PluginMap>;
    getContractAt(
      name: "ReentrancyGuardStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardStorage>;
    getContractAt(
      name: "Router",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Router>;
    getContractAt(
      name: "RouterStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RouterStorage>;
    getContractAt(
      name: "RouterImmutable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RouterImmutable>;
    getContractAt(
      name: "RoyaltyPaymentsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    getContractAt(
      name: "RoyaltyPaymentsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    getContractAt(
      name: "PrimarySale",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySale>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyForUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyForUpgradeable>;
    getContractAt(
      name: "Royalty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Royalty>;
    getContractAt(
      name: "SeaportEIP1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SeaportEIP1271>;
    getContractAt(
      name: "SeaportOrderParser",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SeaportOrderParser>;
    getContractAt(
      name: "SharedMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SharedMetadata>;
    getContractAt(
      name: "SignatureAction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureAction>;
    getContractAt(
      name: "SignatureActionUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureActionUpgradeable>;
    getContractAt(
      name: "SignatureMintERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC1155>;
    getContractAt(
      name: "SignatureMintERC1155Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC1155Upgradeable>;
    getContractAt(
      name: "SignatureMintERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC20>;
    getContractAt(
      name: "SignatureMintERC20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC20Upgradeable>;
    getContractAt(
      name: "SignatureMintERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC721>;
    getContractAt(
      name: "SignatureMintERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureMintERC721Upgradeable>;
    getContractAt(
      name: "SoulboundERC721A",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SoulboundERC721A>;
    getContractAt(
      name: "Staking1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking1155>;
    getContractAt(
      name: "Staking1155Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking1155Upgradeable>;
    getContractAt(
      name: "Staking20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking20>;
    getContractAt(
      name: "Staking20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking20Upgradeable>;
    getContractAt(
      name: "Staking721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking721>;
    getContractAt(
      name: "Staking721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking721Upgradeable>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "TokenBundle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenBundle>;
    getContractAt(
      name: "TokenStore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenStore>;
    getContractAt(
      name: "Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Upgradeable>;
    getContractAt(
      name: "AccountPermissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountPermissions>;
    getContractAt(
      name: "AccountPermissionsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccountPermissionsStorage>;
    getContractAt(
      name: "BatchMintMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchMintMetadata>;
    getContractAt(
      name: "BatchMintMetadataStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchMintMetadataStorage>;
    getContractAt(
      name: "BurnToClaim",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BurnToClaim>;
    getContractAt(
      name: "BurnToClaimStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BurnToClaimStorage>;
    getContractAt(
      name: "ContractMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "ContractMetadataStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataStorage>;
    getContractAt(
      name: "DelayedReveal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DelayedReveal>;
    getContractAt(
      name: "DelayedRevealStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DelayedRevealStorage>;
    getContractAt(
      name: "Drop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Drop>;
    getContractAt(
      name: "DropStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropStorage>;
    getContractAt(
      name: "ERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771Context>;
    getContractAt(
      name: "ERC2771ContextStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextStorage>;
    getContractAt(
      name: "ERC2771ContextConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextConsumer>;
    getContractAt(
      name: "IERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2771Context>;
    getContractAt(
      name: "ERC2771ContextStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextStorage>;
    getContractAt(
      name: "ERC2771ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    getContractAt(
      name: "ContractMetadataImpl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataImpl>;
    getContractAt(
      name: "MetaTx",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MetaTx>;
    getContractAt(
      name: "PermissionsEnumerableImpl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableImpl>;
    getContractAt(
      name: "PlatformFeeImpl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFeeImpl>;
    getContractAt(
      name: "ContractMetadataInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadataInit>;
    getContractAt(
      name: "ERC2771ContextInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextInit>;
    getContractAt(
      name: "ERC721AInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AInit>;
    getContractAt(
      name: "OwnableInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableInit>;
    getContractAt(
      name: "PermissionsEnumerableInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableInit>;
    getContractAt(
      name: "PermissionsInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsInit>;
    getContractAt(
      name: "PlatformFeeInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFeeInit>;
    getContractAt(
      name: "PrimarySaleInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySaleInit>;
    getContractAt(
      name: "ReentrancyGuardInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardInit>;
    getContractAt(
      name: "RoyaltyInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyInit>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "LazyMint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMint>;
    getContractAt(
      name: "LazyMintStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMintStorage>;
    getContractAt(
      name: "OperatorFiltererUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    getContractAt(
      name: "OperatorFilterToggle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterToggle>;
    getContractAt(
      name: "OperatorFilterToggleStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFilterToggleStorage>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "OwnableStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableStorage>;
    getContractAt(
      name: "Permissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsStorage>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "PermissionsEnumerableStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    getContractAt(
      name: "PlatformFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFee>;
    getContractAt(
      name: "PlatformFeeStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFeeStorage>;
    getContractAt(
      name: "PrimarySale",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySale>;
    getContractAt(
      name: "PrimarySaleStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySaleStorage>;
    getContractAt(
      name: "ReentrancyGuardStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardStorage>;
    getContractAt(
      name: "Royalty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Royalty>;
    getContractAt(
      name: "RoyaltyStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyStorage>;
    getContractAt(
      name: "RoyaltyPaymentsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    getContractAt(
      name: "RoyaltyPaymentsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    getContractAt(
      name: "RulesEngine",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RulesEngine>;
    getContractAt(
      name: "RulesEngineStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RulesEngineStorage>;
    getContractAt(
      name: "SharedMetadataBatch",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SharedMetadataBatch>;
    getContractAt(
      name: "SharedMetadataBatchStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SharedMetadataBatchStorage>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "VRFV2WrapperConsumerBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFV2WrapperConsumerBase>;
    getContractAt(
      name: "VRFV2WrapperInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFV2WrapperInterface>;
    getContractAt(
      name: "ERC1155PresetUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155PresetUpgradeable>;
    getContractAt(
      name: "PaymentSplitterUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PaymentSplitterUpgradeable>;
    getContractAt(
      name: "IVotes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "ERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771Context>;
    getContractAt(
      name: "ERC2771ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    getContractAt(
      name: "MinimalForwarderEOAOnly",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MinimalForwarderEOAOnly>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC20Votes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Votes>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ERC1155Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ContractPublisher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractPublisher>;
    getContractAt(
      name: "Forwarder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Forwarder>;
    getContractAt(
      name: "ForwarderChainlessDomain",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ForwarderChainlessDomain>;
    getContractAt(
      name: "ForwarderConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ForwarderConsumer>;
    getContractAt(
      name: "ForwarderEOAOnly",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ForwarderEOAOnly>;
    getContractAt(
      name: "IContractDeployer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractDeployer>;
    getContractAt(
      name: "IContractPublisher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractPublisher>;
    getContractAt(
      name: "IThirdwebContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IThirdwebContract>;
    getContractAt(
      name: "ITWFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWFee>;
    getContractAt(
      name: "ITWMultichainRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWMultichainRegistry>;
    getContractAt(
      name: "ITWRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITWRegistry>;
    getContractAt(
      name: "IWETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "TWMultichainRegistryRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWMultichainRegistryRouter>;
    getContractAt(
      name: "TWMultichainRegistryLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWMultichainRegistryLogic>;
    getContractAt(
      name: "TWMultichainRegistryStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWMultichainRegistryStorage>;
    getContractAt(
      name: "TWFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWFactory>;
    getContractAt(
      name: "IFeeTierPlacementExtension",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeTierPlacementExtension>;
    getContractAt(
      name: "TWFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWFee>;
    getContractAt(
      name: "TWMinimalFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWMinimalFactory>;
    getContractAt(
      name: "TWMultichainRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWMultichainRegistry>;
    getContractAt(
      name: "TWProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWProxy>;
    getContractAt(
      name: "TWRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWRegistry>;
    getContractAt(
      name: "TWStatelessFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TWStatelessFactory>;
    getContractAt(
      name: "BatchMintMetadata_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchMintMetadata_V1>;
    getContractAt(
      name: "DropSinglePhase_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropSinglePhase_V1>;
    getContractAt(
      name: "DropSinglePhase1155_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropSinglePhase1155_V1>;
    getContractAt(
      name: "IDropSinglePhase_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropSinglePhase_V1>;
    getContractAt(
      name: "IDropSinglePhase1155_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropSinglePhase1155_V1>;
    getContractAt(
      name: "IPlatformFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlatformFee>;
    getContractAt(
      name: "IPrimarySale",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrimarySale>;
    getContractAt(
      name: "LazyMint_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMint_V1>;
    getContractAt(
      name: "LazyMintWithTier_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMintWithTier_V1>;
    getContractAt(
      name: "PlatformFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFee>;
    getContractAt(
      name: "PrimarySale",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySale>;
    getContractAt(
      name: "IDropERC1155_V2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC1155_V2>;
    getContractAt(
      name: "IDropERC20_V2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC20_V2>;
    getContractAt(
      name: "IDropERC721_V3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC721_V3>;
    getContractAt(
      name: "ISignatureMintERC721_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignatureMintERC721_V1>;
    getContractAt(
      name: "DropERC1155_V2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC1155_V2>;
    getContractAt(
      name: "DropERC20_V2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC20_V2>;
    getContractAt(
      name: "DropERC721_V3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC721_V3>;
    getContractAt(
      name: "SignatureDrop_V4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureDrop_V4>;
    getContractAt(
      name: "IAccountPermissions_V1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccountPermissions_V1>;
    getContractAt(
      name: "CurrencyTransferLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CurrencyTransferLib>;
    getContractAt(
      name: "Airdrop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Airdrop>;
    getContractAt(
      name: "DropERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC1155>;
    getContractAt(
      name: "DropERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC20>;
    getContractAt(
      name: "DropERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC721>;
    getContractAt(
      name: "IAirdropERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC1155>;
    getContractAt(
      name: "IAirdropERC1155Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC1155Claimable>;
    getContractAt(
      name: "IAirdropERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC20>;
    getContractAt(
      name: "IAirdropERC20Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC20Claimable>;
    getContractAt(
      name: "IAirdropERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC721>;
    getContractAt(
      name: "IAirdropERC721Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAirdropERC721Claimable>;
    getContractAt(
      name: "IDropERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC1155>;
    getContractAt(
      name: "IDropERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC20>;
    getContractAt(
      name: "IDropERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDropERC721>;
    getContractAt(
      name: "ILoyaltyCard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoyaltyCard>;
    getContractAt(
      name: "ILoyaltyPoints",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILoyaltyPoints>;
    getContractAt(
      name: "IMultiwrap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMultiwrap>;
    getContractAt(
      name: "IPack",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPack>;
    getContractAt(
      name: "IPackVRFDirect",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPackVRFDirect>;
    getContractAt(
      name: "IMarketplace",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketplace>;
    getContractAt(
      name: "IEditionStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEditionStake>;
    getContractAt(
      name: "INFTStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTStake>;
    getContractAt(
      name: "ITokenStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenStake>;
    getContractAt(
      name: "ITokenERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenERC1155>;
    getContractAt(
      name: "ITokenERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenERC20>;
    getContractAt(
      name: "ITokenERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenERC721>;
    getContractAt(
      name: "LoyaltyCard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LoyaltyCard>;
    getContractAt(
      name: "Marketplace",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Marketplace>;
    getContractAt(
      name: "DirectListingsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DirectListingsLogic>;
    getContractAt(
      name: "DirectListingsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DirectListingsStorage>;
    getContractAt(
      name: "EnglishAuctionsLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnglishAuctionsLogic>;
    getContractAt(
      name: "EnglishAuctionsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnglishAuctionsStorage>;
    getContractAt(
      name: "MarketplaceV3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketplaceV3>;
    getContractAt(
      name: "IDirectListings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDirectListings>;
    getContractAt(
      name: "IEnglishAuctions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEnglishAuctions>;
    getContractAt(
      name: "IOffers",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOffers>;
    getContractAt(
      name: "OffersLogic",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OffersLogic>;
    getContractAt(
      name: "OffersStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OffersStorage>;
    getContractAt(
      name: "Multiwrap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multiwrap>;
    getContractAt(
      name: "OpenEditionERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenEditionERC721>;
    getContractAt(
      name: "OpenEditionERC721FlatFee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenEditionERC721FlatFee>;
    getContractAt(
      name: "Pack",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pack>;
    getContractAt(
      name: "PackVRFDirect",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PackVRFDirect>;
    getContractAt(
      name: "SignatureDrop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureDrop>;
    getContractAt(
      name: "Split",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Split>;
    getContractAt(
      name: "EditionStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EditionStake>;
    getContractAt(
      name: "NFTStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTStake>;
    getContractAt(
      name: "TokenStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenStake>;
    getContractAt(
      name: "TieredDrop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredDrop>;
    getContractAt(
      name: "TokenERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC1155>;
    getContractAt(
      name: "TokenERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC20>;
    getContractAt(
      name: "TokenERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC721>;
    getContractAt(
      name: "AirdropERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC1155>;
    getContractAt(
      name: "AirdropERC1155Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC1155Claimable>;
    getContractAt(
      name: "AirdropERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC20>;
    getContractAt(
      name: "AirdropERC20Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC20Claimable>;
    getContractAt(
      name: "AirdropERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC721>;
    getContractAt(
      name: "AirdropERC721Claimable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AirdropERC721Claimable>;
    getContractAt(
      name: "LoyaltyPoints",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LoyaltyPoints>;
    getContractAt(
      name: "VoteERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteERC20>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "SafeTransferLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeTransferLib>;

    deployContract(
      name: "AccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    deployContract(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "IAccessControlEnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    deployContract(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlUpgradeable>;
    deployContract(
      name: "GovernorCountingSimpleUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable>;
    deployContract(
      name: "GovernorSettingsUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorSettingsUpgradeable>;
    deployContract(
      name: "GovernorVotesQuorumFractionUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesQuorumFractionUpgradeable>;
    deployContract(
      name: "GovernorVotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesUpgradeable>;
    deployContract(
      name: "GovernorUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorUpgradeable>;
    deployContract(
      name: "IGovernorUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGovernorUpgradeable>;
    deployContract(
      name: "IVotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotesUpgradeable>;
    deployContract(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981Upgradeable>;
    deployContract(
      name: "IERC5267Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267Upgradeable>;
    deployContract(
      name: "IERC5805Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805Upgradeable>;
    deployContract(
      name: "IERC6372Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372Upgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableUpgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Upgradeable>;
    deployContract(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    deployContract(
      name: "ERC1155PausableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155PausableUpgradeable>;
    deployContract(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    deployContract(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    deployContract(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Upgradeable>;
    deployContract(
      name: "ERC1155HolderUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    deployContract(
      name: "ERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155ReceiverUpgradeable>;
    deployContract(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Upgradeable>;
    deployContract(
      name: "ERC20BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BurnableUpgradeable>;
    deployContract(
      name: "ERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    deployContract(
      name: "ERC20VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    deployContract(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    deployContract(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    deployContract(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    deployContract(
      name: "IERC721EnumerableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    deployContract(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    deployContract(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    deployContract(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Upgradeable>;
    deployContract(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "DoubleEndedQueueUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueueUpgradeable>;
    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerable>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerable>;
    deployContract(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Burnable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Base>;
    deployContract(
      name: "ERC1155DelayedReveal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155DelayedReveal>;
    deployContract(
      name: "ERC1155Drop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Drop>;
    deployContract(
      name: "ERC1155LazyMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155LazyMint>;
    deployContract(
      name: "ERC1155SignatureMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155SignatureMint>;
    deployContract(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Base>;
    deployContract(
      name: "ERC20Drop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Drop>;
    deployContract(
      name: "ERC20DropVote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20DropVote>;
    deployContract(
      name: "ERC20SignatureMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SignatureMint>;
    deployContract(
      name: "ERC20SignatureMintVote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SignatureMintVote>;
    deployContract(
      name: "ERC20Vote",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Vote>;
    deployContract(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Base>;
    deployContract(
      name: "ERC721DelayedReveal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721DelayedReveal>;
    deployContract(
      name: "ERC721Drop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Drop>;
    deployContract(
      name: "ERC721LazyMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721LazyMint>;
    deployContract(
      name: "ERC721Multiwrap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Multiwrap>;
    deployContract(
      name: "ERC721SignatureMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721SignatureMint>;
    deployContract(
      name: "Staking1155Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155Base>;
    deployContract(
      name: "Staking20Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20Base>;
    deployContract(
      name: "Staking721Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721Base>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1271>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "ERC721AStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AStorage>;
    deployContract(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Enumerable>;
    deployContract(
      name: "IERC1155Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Metadata>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC1155Supply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Supply>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721A>;
    deployContract(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "IERC721Supply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Supply>;
    deployContract(
      name: "ERC721AQueryable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AQueryable>;
    deployContract(
      name: "ERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AQueryableUpgradeable>;
    deployContract(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    deployContract(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC721AQueryable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AQueryable>;
    deployContract(
      name: "IERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AQueryableUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "AppURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppURI>;
    deployContract(
      name: "BatchMintMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata>;
    deployContract(
      name: "BurnToClaim",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaim>;
    deployContract(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "DelayedReveal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedReveal>;
    deployContract(
      name: "Drop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop>;
    deployContract(
      name: "Drop1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop1155>;
    deployContract(
      name: "DropSinglePhase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase>;
    deployContract(
      name: "DropSinglePhase1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase1155>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "IAccountPermissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccountPermissions>;
    deployContract(
      name: "IAppURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAppURI>;
    deployContract(
      name: "IBurnableERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC1155>;
    deployContract(
      name: "IBurnableERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC20>;
    deployContract(
      name: "IBurnableERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC721>;
    deployContract(
      name: "IBurnToClaim",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnToClaim>;
    deployContract(
      name: "IClaimableERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimableERC1155>;
    deployContract(
      name: "IClaimableERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimableERC721>;
    deployContract(
      name: "IClaimConditionsSinglePhase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimConditionsSinglePhase>;
    deployContract(
      name: "IContractFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractFactory>;
    deployContract(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractMetadata>;
    deployContract(
      name: "IDelayedReveal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelayedReveal>;
    deployContract(
      name: "IDelayedRevealDeprecated",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelayedRevealDeprecated>;
    deployContract(
      name: "IDrop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDrop>;
    deployContract(
      name: "IDrop1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDrop1155>;
    deployContract(
      name: "IDropSinglePhase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase>;
    deployContract(
      name: "IDropSinglePhase1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase1155>;
    deployContract(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ILazyMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILazyMint>;
    deployContract(
      name: "ILazyMintWithTier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILazyMintWithTier>;
    deployContract(
      name: "IMintableERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC1155>;
    deployContract(
      name: "IMintableERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC20>;
    deployContract(
      name: "IMintableERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC721>;
    deployContract(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "INFTMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INFTMetadata>;
    deployContract(
      name: "IOperatorFilterRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOperatorFilterRegistry>;
    deployContract(
      name: "IOperatorFilterToggle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOperatorFilterToggle>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissions>;
    deployContract(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissionsEnumerable>;
    deployContract(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPlatformFee>;
    deployContract(
      name: "IPrimarySale",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimarySale>;
    deployContract(
      name: "IRoyalty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyalty>;
    deployContract(
      name: "IRoyaltyEngineV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyaltyEngineV1>;
    deployContract(
      name: "IRoyaltyPayments",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyaltyPayments>;
    deployContract(
      name: "IRulesEngine",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRulesEngine>;
    deployContract(
      name: "ISharedMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISharedMetadata>;
    deployContract(
      name: "ISharedMetadataBatch",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISharedMetadataBatch>;
    deployContract(
      name: "ISignatureAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureAction>;
    deployContract(
      name: "ISignatureMintERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC1155>;
    deployContract(
      name: "ISignatureMintERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC20>;
    deployContract(
      name: "ISignatureMintERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC721>;
    deployContract(
      name: "IStaking1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking1155>;
    deployContract(
      name: "IStaking20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking20>;
    deployContract(
      name: "IStaking721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking721>;
    deployContract(
      name: "IContext",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContext>;
    deployContract(
      name: "IPluginMap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPluginMap>;
    deployContract(
      name: "IRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRouter>;
    deployContract(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint>;
    deployContract(
      name: "LazyMintWithTier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintWithTier>;
    deployContract(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "NFTMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTMetadata>;
    deployContract(
      name: "OperatorFilterer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterer>;
    deployContract(
      name: "OperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    deployContract(
      name: "OperatorFilterToggle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggle>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "ContractMetadataLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataLogic>;
    deployContract(
      name: "ContractMetadataStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataStorage>;
    deployContract(
      name: "ERC2771ContextConsumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextConsumer>;
    deployContract(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ERC2771ContextLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextLogic>;
    deployContract(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextUpgradeableLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableLogic>;
    deployContract(
      name: "ERC2771ContextUpgradeableStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableStorage>;
    deployContract(
      name: "PermissionsEnumerableLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableLogic>;
    deployContract(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    deployContract(
      name: "PermissionsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsLogic>;
    deployContract(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsStorage>;
    deployContract(
      name: "PlatformFeeLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeLogic>;
    deployContract(
      name: "PlatformFeeStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeStorage>;
    deployContract(
      name: "PluginMap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PluginMap>;
    deployContract(
      name: "ReentrancyGuardStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardStorage>;
    deployContract(
      name: "Router",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Router>;
    deployContract(
      name: "RouterStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RouterStorage>;
    deployContract(
      name: "RouterImmutable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RouterImmutable>;
    deployContract(
      name: "RoyaltyPaymentsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    deployContract(
      name: "RoyaltyPaymentsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    deployContract(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ProxyForUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProxyForUpgradeable>;
    deployContract(
      name: "Royalty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Royalty>;
    deployContract(
      name: "SeaportEIP1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SeaportEIP1271>;
    deployContract(
      name: "SeaportOrderParser",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SeaportOrderParser>;
    deployContract(
      name: "SharedMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadata>;
    deployContract(
      name: "SignatureAction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureAction>;
    deployContract(
      name: "SignatureActionUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureActionUpgradeable>;
    deployContract(
      name: "SignatureMintERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC1155>;
    deployContract(
      name: "SignatureMintERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC1155Upgradeable>;
    deployContract(
      name: "SignatureMintERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC20>;
    deployContract(
      name: "SignatureMintERC20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC20Upgradeable>;
    deployContract(
      name: "SignatureMintERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC721>;
    deployContract(
      name: "SignatureMintERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC721Upgradeable>;
    deployContract(
      name: "SoulboundERC721A",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SoulboundERC721A>;
    deployContract(
      name: "Staking1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155>;
    deployContract(
      name: "Staking1155Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155Upgradeable>;
    deployContract(
      name: "Staking20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20>;
    deployContract(
      name: "Staking20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20Upgradeable>;
    deployContract(
      name: "Staking721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721>;
    deployContract(
      name: "Staking721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721Upgradeable>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "TokenBundle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBundle>;
    deployContract(
      name: "TokenStore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenStore>;
    deployContract(
      name: "Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Upgradeable>;
    deployContract(
      name: "AccountPermissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccountPermissions>;
    deployContract(
      name: "AccountPermissionsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccountPermissionsStorage>;
    deployContract(
      name: "BatchMintMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata>;
    deployContract(
      name: "BatchMintMetadataStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadataStorage>;
    deployContract(
      name: "BurnToClaim",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaim>;
    deployContract(
      name: "BurnToClaimStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaimStorage>;
    deployContract(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "ContractMetadataStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataStorage>;
    deployContract(
      name: "DelayedReveal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedReveal>;
    deployContract(
      name: "DelayedRevealStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedRevealStorage>;
    deployContract(
      name: "Drop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop>;
    deployContract(
      name: "DropStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropStorage>;
    deployContract(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextConsumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextConsumer>;
    deployContract(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ERC2771ContextStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    deployContract(
      name: "ContractMetadataImpl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataImpl>;
    deployContract(
      name: "MetaTx",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MetaTx>;
    deployContract(
      name: "PermissionsEnumerableImpl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableImpl>;
    deployContract(
      name: "PlatformFeeImpl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeImpl>;
    deployContract(
      name: "ContractMetadataInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataInit>;
    deployContract(
      name: "ERC2771ContextInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextInit>;
    deployContract(
      name: "ERC721AInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AInit>;
    deployContract(
      name: "OwnableInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableInit>;
    deployContract(
      name: "PermissionsEnumerableInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableInit>;
    deployContract(
      name: "PermissionsInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsInit>;
    deployContract(
      name: "PlatformFeeInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeInit>;
    deployContract(
      name: "PrimarySaleInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySaleInit>;
    deployContract(
      name: "ReentrancyGuardInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardInit>;
    deployContract(
      name: "RoyaltyInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyInit>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint>;
    deployContract(
      name: "LazyMintStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintStorage>;
    deployContract(
      name: "OperatorFiltererUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    deployContract(
      name: "OperatorFilterToggle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggle>;
    deployContract(
      name: "OperatorFilterToggleStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggleStorage>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "OwnableStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableStorage>;
    deployContract(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsStorage>;
    deployContract(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "PermissionsEnumerableStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    deployContract(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "PlatformFeeStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeStorage>;
    deployContract(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "PrimarySaleStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySaleStorage>;
    deployContract(
      name: "ReentrancyGuardStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardStorage>;
    deployContract(
      name: "Royalty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Royalty>;
    deployContract(
      name: "RoyaltyStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyStorage>;
    deployContract(
      name: "RoyaltyPaymentsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    deployContract(
      name: "RoyaltyPaymentsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    deployContract(
      name: "RulesEngine",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RulesEngine>;
    deployContract(
      name: "RulesEngineStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RulesEngineStorage>;
    deployContract(
      name: "SharedMetadataBatch",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadataBatch>;
    deployContract(
      name: "SharedMetadataBatchStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadataBatchStorage>;
    deployContract(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LinkTokenInterface>;
    deployContract(
      name: "VRFV2WrapperConsumerBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFV2WrapperConsumerBase>;
    deployContract(
      name: "VRFV2WrapperInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFV2WrapperInterface>;
    deployContract(
      name: "ERC1155PresetUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155PresetUpgradeable>;
    deployContract(
      name: "PaymentSplitterUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PaymentSplitterUpgradeable>;
    deployContract(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    deployContract(
      name: "MinimalForwarderEOAOnly",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalForwarderEOAOnly>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Proxy>;
    deployContract(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Upgrade>;
    deployContract(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Votes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Votes>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "ContractPublisher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractPublisher>;
    deployContract(
      name: "Forwarder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Forwarder>;
    deployContract(
      name: "ForwarderChainlessDomain",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderChainlessDomain>;
    deployContract(
      name: "ForwarderConsumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderConsumer>;
    deployContract(
      name: "ForwarderEOAOnly",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderEOAOnly>;
    deployContract(
      name: "IContractDeployer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractDeployer>;
    deployContract(
      name: "IContractPublisher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractPublisher>;
    deployContract(
      name: "IThirdwebContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IThirdwebContract>;
    deployContract(
      name: "ITWFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWFee>;
    deployContract(
      name: "ITWMultichainRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWMultichainRegistry>;
    deployContract(
      name: "ITWRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWRegistry>;
    deployContract(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "TWMultichainRegistryRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryRouter>;
    deployContract(
      name: "TWMultichainRegistryLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryLogic>;
    deployContract(
      name: "TWMultichainRegistryStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryStorage>;
    deployContract(
      name: "TWFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWFactory>;
    deployContract(
      name: "IFeeTierPlacementExtension",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFeeTierPlacementExtension>;
    deployContract(
      name: "TWFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWFee>;
    deployContract(
      name: "TWMinimalFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMinimalFactory>;
    deployContract(
      name: "TWMultichainRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistry>;
    deployContract(
      name: "TWProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWProxy>;
    deployContract(
      name: "TWRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWRegistry>;
    deployContract(
      name: "TWStatelessFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWStatelessFactory>;
    deployContract(
      name: "BatchMintMetadata_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata_V1>;
    deployContract(
      name: "DropSinglePhase_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase_V1>;
    deployContract(
      name: "DropSinglePhase1155_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase1155_V1>;
    deployContract(
      name: "IDropSinglePhase_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase_V1>;
    deployContract(
      name: "IDropSinglePhase1155_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase1155_V1>;
    deployContract(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPlatformFee>;
    deployContract(
      name: "IPrimarySale",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimarySale>;
    deployContract(
      name: "LazyMint_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint_V1>;
    deployContract(
      name: "LazyMintWithTier_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintWithTier_V1>;
    deployContract(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "IDropERC1155_V2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC1155_V2>;
    deployContract(
      name: "IDropERC20_V2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC20_V2>;
    deployContract(
      name: "IDropERC721_V3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC721_V3>;
    deployContract(
      name: "ISignatureMintERC721_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC721_V1>;
    deployContract(
      name: "DropERC1155_V2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC1155_V2>;
    deployContract(
      name: "DropERC20_V2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC20_V2>;
    deployContract(
      name: "DropERC721_V3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC721_V3>;
    deployContract(
      name: "SignatureDrop_V4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureDrop_V4>;
    deployContract(
      name: "IAccountPermissions_V1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccountPermissions_V1>;
    deployContract(
      name: "CurrencyTransferLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurrencyTransferLib>;
    deployContract(
      name: "Airdrop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Airdrop>;
    deployContract(
      name: "DropERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC1155>;
    deployContract(
      name: "DropERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC20>;
    deployContract(
      name: "DropERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC721>;
    deployContract(
      name: "IAirdropERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC1155>;
    deployContract(
      name: "IAirdropERC1155Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC1155Claimable>;
    deployContract(
      name: "IAirdropERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC20>;
    deployContract(
      name: "IAirdropERC20Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC20Claimable>;
    deployContract(
      name: "IAirdropERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC721>;
    deployContract(
      name: "IAirdropERC721Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC721Claimable>;
    deployContract(
      name: "IDropERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC1155>;
    deployContract(
      name: "IDropERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC20>;
    deployContract(
      name: "IDropERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC721>;
    deployContract(
      name: "ILoyaltyCard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILoyaltyCard>;
    deployContract(
      name: "ILoyaltyPoints",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILoyaltyPoints>;
    deployContract(
      name: "IMultiwrap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMultiwrap>;
    deployContract(
      name: "IPack",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPack>;
    deployContract(
      name: "IPackVRFDirect",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPackVRFDirect>;
    deployContract(
      name: "IMarketplace",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMarketplace>;
    deployContract(
      name: "IEditionStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEditionStake>;
    deployContract(
      name: "INFTStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INFTStake>;
    deployContract(
      name: "ITokenStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenStake>;
    deployContract(
      name: "ITokenERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC1155>;
    deployContract(
      name: "ITokenERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC20>;
    deployContract(
      name: "ITokenERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC721>;
    deployContract(
      name: "LoyaltyCard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoyaltyCard>;
    deployContract(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Marketplace>;
    deployContract(
      name: "DirectListingsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectListingsLogic>;
    deployContract(
      name: "DirectListingsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectListingsStorage>;
    deployContract(
      name: "EnglishAuctionsLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnglishAuctionsLogic>;
    deployContract(
      name: "EnglishAuctionsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnglishAuctionsStorage>;
    deployContract(
      name: "MarketplaceV3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MarketplaceV3>;
    deployContract(
      name: "IDirectListings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDirectListings>;
    deployContract(
      name: "IEnglishAuctions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEnglishAuctions>;
    deployContract(
      name: "IOffers",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOffers>;
    deployContract(
      name: "OffersLogic",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OffersLogic>;
    deployContract(
      name: "OffersStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OffersStorage>;
    deployContract(
      name: "Multiwrap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multiwrap>;
    deployContract(
      name: "OpenEditionERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OpenEditionERC721>;
    deployContract(
      name: "OpenEditionERC721FlatFee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OpenEditionERC721FlatFee>;
    deployContract(
      name: "Pack",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pack>;
    deployContract(
      name: "PackVRFDirect",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PackVRFDirect>;
    deployContract(
      name: "SignatureDrop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureDrop>;
    deployContract(
      name: "Split",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Split>;
    deployContract(
      name: "EditionStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EditionStake>;
    deployContract(
      name: "NFTStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTStake>;
    deployContract(
      name: "TokenStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenStake>;
    deployContract(
      name: "TieredDrop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TieredDrop>;
    deployContract(
      name: "TokenERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC1155>;
    deployContract(
      name: "TokenERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC20>;
    deployContract(
      name: "TokenERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC721>;
    deployContract(
      name: "AirdropERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC1155>;
    deployContract(
      name: "AirdropERC1155Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC1155Claimable>;
    deployContract(
      name: "AirdropERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC20>;
    deployContract(
      name: "AirdropERC20Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC20Claimable>;
    deployContract(
      name: "AirdropERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC721>;
    deployContract(
      name: "AirdropERC721Claimable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC721Claimable>;
    deployContract(
      name: "LoyaltyPoints",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoyaltyPoints>;
    deployContract(
      name: "VoteERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteERC20>;
    deployContract(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "SafeTransferLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeTransferLib>;

    deployContract(
      name: "AccessControlEnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerableUpgradeable>;
    deployContract(
      name: "AccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlUpgradeable>;
    deployContract(
      name: "IAccessControlEnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerableUpgradeable>;
    deployContract(
      name: "IAccessControlUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlUpgradeable>;
    deployContract(
      name: "GovernorCountingSimpleUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorCountingSimpleUpgradeable>;
    deployContract(
      name: "GovernorSettingsUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorSettingsUpgradeable>;
    deployContract(
      name: "GovernorVotesQuorumFractionUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesQuorumFractionUpgradeable>;
    deployContract(
      name: "GovernorVotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesUpgradeable>;
    deployContract(
      name: "GovernorUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorUpgradeable>;
    deployContract(
      name: "IGovernorUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGovernorUpgradeable>;
    deployContract(
      name: "IVotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotesUpgradeable>;
    deployContract(
      name: "IERC2981Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981Upgradeable>;
    deployContract(
      name: "IERC5267Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267Upgradeable>;
    deployContract(
      name: "IERC5805Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805Upgradeable>;
    deployContract(
      name: "IERC6372Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372Upgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "PausableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableUpgradeable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "ERC1155Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Upgradeable>;
    deployContract(
      name: "ERC1155BurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    deployContract(
      name: "ERC1155PausableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155PausableUpgradeable>;
    deployContract(
      name: "IERC1155MetadataURIUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    deployContract(
      name: "IERC1155ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    deployContract(
      name: "IERC1155Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Upgradeable>;
    deployContract(
      name: "ERC1155HolderUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    deployContract(
      name: "ERC1155ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155ReceiverUpgradeable>;
    deployContract(
      name: "ERC20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Upgradeable>;
    deployContract(
      name: "ERC20BurnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BurnableUpgradeable>;
    deployContract(
      name: "ERC20PermitUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20PermitUpgradeable>;
    deployContract(
      name: "ERC20VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20VotesUpgradeable>;
    deployContract(
      name: "IERC20MetadataUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    deployContract(
      name: "IERC20PermitUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    deployContract(
      name: "IERC20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721EnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    deployContract(
      name: "IERC721EnumerableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    deployContract(
      name: "IERC721MetadataUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    deployContract(
      name: "IERC721ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    deployContract(
      name: "IERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Upgradeable>;
    deployContract(
      name: "ERC721HolderUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "DoubleEndedQueueUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueueUpgradeable>;
    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlEnumerable>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IAccessControlEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlEnumerable>;
    deployContract(
      name: "IERC2981",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Burnable>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Burnable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "ERC1155Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Base>;
    deployContract(
      name: "ERC1155DelayedReveal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155DelayedReveal>;
    deployContract(
      name: "ERC1155Drop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Drop>;
    deployContract(
      name: "ERC1155LazyMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155LazyMint>;
    deployContract(
      name: "ERC1155SignatureMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155SignatureMint>;
    deployContract(
      name: "ERC20Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Base>;
    deployContract(
      name: "ERC20Drop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Drop>;
    deployContract(
      name: "ERC20DropVote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20DropVote>;
    deployContract(
      name: "ERC20SignatureMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SignatureMint>;
    deployContract(
      name: "ERC20SignatureMintVote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SignatureMintVote>;
    deployContract(
      name: "ERC20Vote",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Vote>;
    deployContract(
      name: "ERC721Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Base>;
    deployContract(
      name: "ERC721DelayedReveal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721DelayedReveal>;
    deployContract(
      name: "ERC721Drop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Drop>;
    deployContract(
      name: "ERC721LazyMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721LazyMint>;
    deployContract(
      name: "ERC721Multiwrap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Multiwrap>;
    deployContract(
      name: "ERC721SignatureMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721SignatureMint>;
    deployContract(
      name: "Staking1155Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155Base>;
    deployContract(
      name: "Staking20Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20Base>;
    deployContract(
      name: "Staking721Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721Base>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1271>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "ERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "ERC721AStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AStorage>;
    deployContract(
      name: "ERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "ERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A>;
    deployContract(
      name: "ERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Enumerable>;
    deployContract(
      name: "IERC1155Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Metadata>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC1155Supply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Supply>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC2981",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC4906",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721A>;
    deployContract(
      name: "IERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "IERC721Supply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Supply>;
    deployContract(
      name: "ERC721AQueryable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AQueryable>;
    deployContract(
      name: "ERC721AQueryableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AQueryableUpgradeable>;
    deployContract(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    deployContract(
      name: "ERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC721AQueryable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AQueryable>;
    deployContract(
      name: "IERC721AQueryableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AQueryableUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "AppURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AppURI>;
    deployContract(
      name: "BatchMintMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata>;
    deployContract(
      name: "BurnToClaim",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaim>;
    deployContract(
      name: "ContractMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "DelayedReveal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedReveal>;
    deployContract(
      name: "Drop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop>;
    deployContract(
      name: "Drop1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop1155>;
    deployContract(
      name: "DropSinglePhase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase>;
    deployContract(
      name: "DropSinglePhase1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase1155>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "IAccountPermissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccountPermissions>;
    deployContract(
      name: "IAppURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAppURI>;
    deployContract(
      name: "IBurnableERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC1155>;
    deployContract(
      name: "IBurnableERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC20>;
    deployContract(
      name: "IBurnableERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnableERC721>;
    deployContract(
      name: "IBurnToClaim",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBurnToClaim>;
    deployContract(
      name: "IClaimableERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimableERC1155>;
    deployContract(
      name: "IClaimableERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimableERC721>;
    deployContract(
      name: "IClaimConditionsSinglePhase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IClaimConditionsSinglePhase>;
    deployContract(
      name: "IContractFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractFactory>;
    deployContract(
      name: "IContractMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractMetadata>;
    deployContract(
      name: "IDelayedReveal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelayedReveal>;
    deployContract(
      name: "IDelayedRevealDeprecated",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelayedRevealDeprecated>;
    deployContract(
      name: "IDrop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDrop>;
    deployContract(
      name: "IDrop1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDrop1155>;
    deployContract(
      name: "IDropSinglePhase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase>;
    deployContract(
      name: "IDropSinglePhase1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase1155>;
    deployContract(
      name: "IERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ILazyMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILazyMint>;
    deployContract(
      name: "ILazyMintWithTier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILazyMintWithTier>;
    deployContract(
      name: "IMintableERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC1155>;
    deployContract(
      name: "IMintableERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC20>;
    deployContract(
      name: "IMintableERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMintableERC721>;
    deployContract(
      name: "IMulticall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "INFTMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INFTMetadata>;
    deployContract(
      name: "IOperatorFilterRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOperatorFilterRegistry>;
    deployContract(
      name: "IOperatorFilterToggle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOperatorFilterToggle>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IPermissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissions>;
    deployContract(
      name: "IPermissionsEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissionsEnumerable>;
    deployContract(
      name: "IPlatformFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPlatformFee>;
    deployContract(
      name: "IPrimarySale",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimarySale>;
    deployContract(
      name: "IRoyalty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyalty>;
    deployContract(
      name: "IRoyaltyEngineV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyaltyEngineV1>;
    deployContract(
      name: "IRoyaltyPayments",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRoyaltyPayments>;
    deployContract(
      name: "IRulesEngine",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRulesEngine>;
    deployContract(
      name: "ISharedMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISharedMetadata>;
    deployContract(
      name: "ISharedMetadataBatch",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISharedMetadataBatch>;
    deployContract(
      name: "ISignatureAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureAction>;
    deployContract(
      name: "ISignatureMintERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC1155>;
    deployContract(
      name: "ISignatureMintERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC20>;
    deployContract(
      name: "ISignatureMintERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC721>;
    deployContract(
      name: "IStaking1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking1155>;
    deployContract(
      name: "IStaking20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking20>;
    deployContract(
      name: "IStaking721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStaking721>;
    deployContract(
      name: "IContext",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContext>;
    deployContract(
      name: "IPluginMap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPluginMap>;
    deployContract(
      name: "IRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRouter>;
    deployContract(
      name: "LazyMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint>;
    deployContract(
      name: "LazyMintWithTier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintWithTier>;
    deployContract(
      name: "Multicall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "NFTMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTMetadata>;
    deployContract(
      name: "OperatorFilterer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterer>;
    deployContract(
      name: "OperatorFiltererUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    deployContract(
      name: "OperatorFilterToggle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggle>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Permissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "PlatformFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "ContractMetadataLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataLogic>;
    deployContract(
      name: "ContractMetadataStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataStorage>;
    deployContract(
      name: "ERC2771ContextConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextConsumer>;
    deployContract(
      name: "IERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ERC2771ContextLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextLogic>;
    deployContract(
      name: "ERC2771ContextStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextUpgradeableLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableLogic>;
    deployContract(
      name: "ERC2771ContextUpgradeableStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeableStorage>;
    deployContract(
      name: "PermissionsEnumerableLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableLogic>;
    deployContract(
      name: "PermissionsEnumerableStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    deployContract(
      name: "PermissionsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsLogic>;
    deployContract(
      name: "PermissionsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsStorage>;
    deployContract(
      name: "PlatformFeeLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeLogic>;
    deployContract(
      name: "PlatformFeeStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeStorage>;
    deployContract(
      name: "PluginMap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PluginMap>;
    deployContract(
      name: "ReentrancyGuardStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardStorage>;
    deployContract(
      name: "Router",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Router>;
    deployContract(
      name: "RouterStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RouterStorage>;
    deployContract(
      name: "RouterImmutable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RouterImmutable>;
    deployContract(
      name: "RoyaltyPaymentsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    deployContract(
      name: "RoyaltyPaymentsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    deployContract(
      name: "PrimarySale",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ProxyForUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProxyForUpgradeable>;
    deployContract(
      name: "Royalty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Royalty>;
    deployContract(
      name: "SeaportEIP1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SeaportEIP1271>;
    deployContract(
      name: "SeaportOrderParser",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SeaportOrderParser>;
    deployContract(
      name: "SharedMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadata>;
    deployContract(
      name: "SignatureAction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureAction>;
    deployContract(
      name: "SignatureActionUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureActionUpgradeable>;
    deployContract(
      name: "SignatureMintERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC1155>;
    deployContract(
      name: "SignatureMintERC1155Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC1155Upgradeable>;
    deployContract(
      name: "SignatureMintERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC20>;
    deployContract(
      name: "SignatureMintERC20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC20Upgradeable>;
    deployContract(
      name: "SignatureMintERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC721>;
    deployContract(
      name: "SignatureMintERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureMintERC721Upgradeable>;
    deployContract(
      name: "SoulboundERC721A",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SoulboundERC721A>;
    deployContract(
      name: "Staking1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155>;
    deployContract(
      name: "Staking1155Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking1155Upgradeable>;
    deployContract(
      name: "Staking20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20>;
    deployContract(
      name: "Staking20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking20Upgradeable>;
    deployContract(
      name: "Staking721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721>;
    deployContract(
      name: "Staking721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Staking721Upgradeable>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "TokenBundle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBundle>;
    deployContract(
      name: "TokenStore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenStore>;
    deployContract(
      name: "Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Upgradeable>;
    deployContract(
      name: "AccountPermissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccountPermissions>;
    deployContract(
      name: "AccountPermissionsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccountPermissionsStorage>;
    deployContract(
      name: "BatchMintMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata>;
    deployContract(
      name: "BatchMintMetadataStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadataStorage>;
    deployContract(
      name: "BurnToClaim",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaim>;
    deployContract(
      name: "BurnToClaimStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BurnToClaimStorage>;
    deployContract(
      name: "ContractMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "ContractMetadataStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataStorage>;
    deployContract(
      name: "DelayedReveal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedReveal>;
    deployContract(
      name: "DelayedRevealStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelayedRevealStorage>;
    deployContract(
      name: "Drop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Drop>;
    deployContract(
      name: "DropStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropStorage>;
    deployContract(
      name: "ERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextConsumer>;
    deployContract(
      name: "IERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "ERC2771ContextStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextStorage>;
    deployContract(
      name: "ERC2771ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    deployContract(
      name: "ContractMetadataImpl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataImpl>;
    deployContract(
      name: "MetaTx",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MetaTx>;
    deployContract(
      name: "PermissionsEnumerableImpl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableImpl>;
    deployContract(
      name: "PlatformFeeImpl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeImpl>;
    deployContract(
      name: "ContractMetadataInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadataInit>;
    deployContract(
      name: "ERC2771ContextInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextInit>;
    deployContract(
      name: "ERC721AInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AInit>;
    deployContract(
      name: "OwnableInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableInit>;
    deployContract(
      name: "PermissionsEnumerableInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableInit>;
    deployContract(
      name: "PermissionsInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsInit>;
    deployContract(
      name: "PlatformFeeInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeInit>;
    deployContract(
      name: "PrimarySaleInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySaleInit>;
    deployContract(
      name: "ReentrancyGuardInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardInit>;
    deployContract(
      name: "RoyaltyInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyInit>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "LazyMint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint>;
    deployContract(
      name: "LazyMintStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintStorage>;
    deployContract(
      name: "OperatorFiltererUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFiltererUpgradeable>;
    deployContract(
      name: "OperatorFilterToggle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggle>;
    deployContract(
      name: "OperatorFilterToggleStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OperatorFilterToggleStorage>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "OwnableStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableStorage>;
    deployContract(
      name: "Permissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsStorage>;
    deployContract(
      name: "PermissionsEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "PermissionsEnumerableStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerableStorage>;
    deployContract(
      name: "PlatformFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "PlatformFeeStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFeeStorage>;
    deployContract(
      name: "PrimarySale",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "PrimarySaleStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySaleStorage>;
    deployContract(
      name: "ReentrancyGuardStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardStorage>;
    deployContract(
      name: "Royalty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Royalty>;
    deployContract(
      name: "RoyaltyStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyStorage>;
    deployContract(
      name: "RoyaltyPaymentsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsLogic>;
    deployContract(
      name: "RoyaltyPaymentsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoyaltyPaymentsStorage>;
    deployContract(
      name: "RulesEngine",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RulesEngine>;
    deployContract(
      name: "RulesEngineStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RulesEngineStorage>;
    deployContract(
      name: "SharedMetadataBatch",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadataBatch>;
    deployContract(
      name: "SharedMetadataBatchStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedMetadataBatchStorage>;
    deployContract(
      name: "LinkTokenInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LinkTokenInterface>;
    deployContract(
      name: "VRFV2WrapperConsumerBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFV2WrapperConsumerBase>;
    deployContract(
      name: "VRFV2WrapperInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFV2WrapperInterface>;
    deployContract(
      name: "ERC1155PresetUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155PresetUpgradeable>;
    deployContract(
      name: "PaymentSplitterUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PaymentSplitterUpgradeable>;
    deployContract(
      name: "IVotes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "ERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    deployContract(
      name: "MinimalForwarderEOAOnly",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinimalForwarderEOAOnly>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Proxy>;
    deployContract(
      name: "ERC1967Upgrade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Upgrade>;
    deployContract(
      name: "IERC1822Proxiable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ReentrancyGuardUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Votes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Votes>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "ERC1155Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Holder>;
    deployContract(
      name: "ERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC721Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "ContractPublisher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractPublisher>;
    deployContract(
      name: "Forwarder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Forwarder>;
    deployContract(
      name: "ForwarderChainlessDomain",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderChainlessDomain>;
    deployContract(
      name: "ForwarderConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderConsumer>;
    deployContract(
      name: "ForwarderEOAOnly",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwarderEOAOnly>;
    deployContract(
      name: "IContractDeployer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractDeployer>;
    deployContract(
      name: "IContractPublisher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractPublisher>;
    deployContract(
      name: "IThirdwebContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IThirdwebContract>;
    deployContract(
      name: "ITWFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWFee>;
    deployContract(
      name: "ITWMultichainRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWMultichainRegistry>;
    deployContract(
      name: "ITWRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITWRegistry>;
    deployContract(
      name: "IWETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "TWMultichainRegistryRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryRouter>;
    deployContract(
      name: "TWMultichainRegistryLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryLogic>;
    deployContract(
      name: "TWMultichainRegistryStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistryStorage>;
    deployContract(
      name: "TWFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWFactory>;
    deployContract(
      name: "IFeeTierPlacementExtension",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFeeTierPlacementExtension>;
    deployContract(
      name: "TWFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWFee>;
    deployContract(
      name: "TWMinimalFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMinimalFactory>;
    deployContract(
      name: "TWMultichainRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWMultichainRegistry>;
    deployContract(
      name: "TWProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWProxy>;
    deployContract(
      name: "TWRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWRegistry>;
    deployContract(
      name: "TWStatelessFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TWStatelessFactory>;
    deployContract(
      name: "BatchMintMetadata_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BatchMintMetadata_V1>;
    deployContract(
      name: "DropSinglePhase_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase_V1>;
    deployContract(
      name: "DropSinglePhase1155_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropSinglePhase1155_V1>;
    deployContract(
      name: "IDropSinglePhase_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase_V1>;
    deployContract(
      name: "IDropSinglePhase1155_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropSinglePhase1155_V1>;
    deployContract(
      name: "IPlatformFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPlatformFee>;
    deployContract(
      name: "IPrimarySale",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimarySale>;
    deployContract(
      name: "LazyMint_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMint_V1>;
    deployContract(
      name: "LazyMintWithTier_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LazyMintWithTier_V1>;
    deployContract(
      name: "PlatformFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PlatformFee>;
    deployContract(
      name: "PrimarySale",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimarySale>;
    deployContract(
      name: "IDropERC1155_V2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC1155_V2>;
    deployContract(
      name: "IDropERC20_V2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC20_V2>;
    deployContract(
      name: "IDropERC721_V3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC721_V3>;
    deployContract(
      name: "ISignatureMintERC721_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISignatureMintERC721_V1>;
    deployContract(
      name: "DropERC1155_V2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC1155_V2>;
    deployContract(
      name: "DropERC20_V2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC20_V2>;
    deployContract(
      name: "DropERC721_V3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC721_V3>;
    deployContract(
      name: "SignatureDrop_V4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureDrop_V4>;
    deployContract(
      name: "IAccountPermissions_V1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccountPermissions_V1>;
    deployContract(
      name: "CurrencyTransferLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CurrencyTransferLib>;
    deployContract(
      name: "Airdrop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Airdrop>;
    deployContract(
      name: "DropERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC1155>;
    deployContract(
      name: "DropERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC20>;
    deployContract(
      name: "DropERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DropERC721>;
    deployContract(
      name: "IAirdropERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC1155>;
    deployContract(
      name: "IAirdropERC1155Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC1155Claimable>;
    deployContract(
      name: "IAirdropERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC20>;
    deployContract(
      name: "IAirdropERC20Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC20Claimable>;
    deployContract(
      name: "IAirdropERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC721>;
    deployContract(
      name: "IAirdropERC721Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAirdropERC721Claimable>;
    deployContract(
      name: "IDropERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC1155>;
    deployContract(
      name: "IDropERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC20>;
    deployContract(
      name: "IDropERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDropERC721>;
    deployContract(
      name: "ILoyaltyCard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILoyaltyCard>;
    deployContract(
      name: "ILoyaltyPoints",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILoyaltyPoints>;
    deployContract(
      name: "IMultiwrap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMultiwrap>;
    deployContract(
      name: "IPack",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPack>;
    deployContract(
      name: "IPackVRFDirect",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPackVRFDirect>;
    deployContract(
      name: "IMarketplace",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMarketplace>;
    deployContract(
      name: "IEditionStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEditionStake>;
    deployContract(
      name: "INFTStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INFTStake>;
    deployContract(
      name: "ITokenStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenStake>;
    deployContract(
      name: "ITokenERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC1155>;
    deployContract(
      name: "ITokenERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC20>;
    deployContract(
      name: "ITokenERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenERC721>;
    deployContract(
      name: "LoyaltyCard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoyaltyCard>;
    deployContract(
      name: "Marketplace",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Marketplace>;
    deployContract(
      name: "DirectListingsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectListingsLogic>;
    deployContract(
      name: "DirectListingsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectListingsStorage>;
    deployContract(
      name: "EnglishAuctionsLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnglishAuctionsLogic>;
    deployContract(
      name: "EnglishAuctionsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnglishAuctionsStorage>;
    deployContract(
      name: "MarketplaceV3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MarketplaceV3>;
    deployContract(
      name: "IDirectListings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDirectListings>;
    deployContract(
      name: "IEnglishAuctions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEnglishAuctions>;
    deployContract(
      name: "IOffers",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOffers>;
    deployContract(
      name: "OffersLogic",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OffersLogic>;
    deployContract(
      name: "OffersStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OffersStorage>;
    deployContract(
      name: "Multiwrap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multiwrap>;
    deployContract(
      name: "OpenEditionERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OpenEditionERC721>;
    deployContract(
      name: "OpenEditionERC721FlatFee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OpenEditionERC721FlatFee>;
    deployContract(
      name: "Pack",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pack>;
    deployContract(
      name: "PackVRFDirect",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PackVRFDirect>;
    deployContract(
      name: "SignatureDrop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureDrop>;
    deployContract(
      name: "Split",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Split>;
    deployContract(
      name: "EditionStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EditionStake>;
    deployContract(
      name: "NFTStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTStake>;
    deployContract(
      name: "TokenStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenStake>;
    deployContract(
      name: "TieredDrop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TieredDrop>;
    deployContract(
      name: "TokenERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC1155>;
    deployContract(
      name: "TokenERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC20>;
    deployContract(
      name: "TokenERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenERC721>;
    deployContract(
      name: "AirdropERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC1155>;
    deployContract(
      name: "AirdropERC1155Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC1155Claimable>;
    deployContract(
      name: "AirdropERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC20>;
    deployContract(
      name: "AirdropERC20Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC20Claimable>;
    deployContract(
      name: "AirdropERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC721>;
    deployContract(
      name: "AirdropERC721Claimable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AirdropERC721Claimable>;
    deployContract(
      name: "LoyaltyPoints",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoyaltyPoints>;
    deployContract(
      name: "VoteERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VoteERC20>;
    deployContract(
      name: "ERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721AUpgradeable>;
    deployContract(
      name: "IERC721AUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721AUpgradeable>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "SafeTransferLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeTransferLib>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
